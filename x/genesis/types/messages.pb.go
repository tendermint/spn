// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: genesis/v1beta/messages.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgProposalVote_Value int32

const (
	MsgProposalVote_APPROVE MsgProposalVote_Value = 0
	MsgProposalVote_REJECT  MsgProposalVote_Value = 1
)

var MsgProposalVote_Value_name = map[int32]string{
	0: "APPROVE",
	1: "REJECT",
}

var MsgProposalVote_Value_value = map[string]int32{
	"APPROVE": 0,
	"REJECT":  1,
}

func (x MsgProposalVote_Value) String() string {
	return proto.EnumName(MsgProposalVote_Value_name, int32(x))
}

func (MsgProposalVote_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_448a693a1956328e, []int{4, 0}
}

type MsgChainCreate struct {
	ChainID        string                                        `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Creator        github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=creator,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"creator,omitempty"`
	SourceURL      string                                        `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	SourceHash     string                                        `protobuf:"bytes,4,opt,name=sourceHash,proto3" json:"sourceHash,omitempty"`
	InitialGenesis []byte                                        `protobuf:"bytes,5,opt,name=initialGenesis,proto3" json:"initialGenesis,omitempty"`
}

func (m *MsgChainCreate) Reset()         { *m = MsgChainCreate{} }
func (m *MsgChainCreate) String() string { return proto.CompactTextString(m) }
func (*MsgChainCreate) ProtoMessage()    {}
func (*MsgChainCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a693a1956328e, []int{0}
}
func (m *MsgChainCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChainCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChainCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChainCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChainCreate.Merge(m, src)
}
func (m *MsgChainCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgChainCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChainCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChainCreate proto.InternalMessageInfo

func (m *MsgChainCreate) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *MsgChainCreate) GetCreator() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *MsgChainCreate) GetSourceURL() string {
	if m != nil {
		return m.SourceURL
	}
	return ""
}

func (m *MsgChainCreate) GetSourceHash() string {
	if m != nil {
		return m.SourceHash
	}
	return ""
}

func (m *MsgChainCreate) GetInitialGenesis() []byte {
	if m != nil {
		return m.InitialGenesis
	}
	return nil
}

type MsgProposalChange struct {
	ChainID string                                        `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Creator github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=creator,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"creator,omitempty"`
	Payload *ProposalChangePayload                        `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *MsgProposalChange) Reset()         { *m = MsgProposalChange{} }
func (m *MsgProposalChange) String() string { return proto.CompactTextString(m) }
func (*MsgProposalChange) ProtoMessage()    {}
func (*MsgProposalChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a693a1956328e, []int{1}
}
func (m *MsgProposalChange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProposalChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProposalChange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProposalChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProposalChange.Merge(m, src)
}
func (m *MsgProposalChange) XXX_Size() int {
	return m.Size()
}
func (m *MsgProposalChange) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProposalChange.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProposalChange proto.InternalMessageInfo

func (m *MsgProposalChange) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *MsgProposalChange) GetCreator() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *MsgProposalChange) GetPayload() *ProposalChangePayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type MsgProposalAddAccount struct {
	ChainID string                                        `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Creator github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=creator,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"creator,omitempty"`
	Payload *ProposalAddAccountPayload                    `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *MsgProposalAddAccount) Reset()         { *m = MsgProposalAddAccount{} }
func (m *MsgProposalAddAccount) String() string { return proto.CompactTextString(m) }
func (*MsgProposalAddAccount) ProtoMessage()    {}
func (*MsgProposalAddAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a693a1956328e, []int{2}
}
func (m *MsgProposalAddAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProposalAddAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProposalAddAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProposalAddAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProposalAddAccount.Merge(m, src)
}
func (m *MsgProposalAddAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgProposalAddAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProposalAddAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProposalAddAccount proto.InternalMessageInfo

func (m *MsgProposalAddAccount) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *MsgProposalAddAccount) GetCreator() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *MsgProposalAddAccount) GetPayload() *ProposalAddAccountPayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type MsgProposalAddValidator struct {
	ChainID string                                        `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Creator github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=creator,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"creator,omitempty"`
	Payload *ProposalAddValidatorPayload                  `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *MsgProposalAddValidator) Reset()         { *m = MsgProposalAddValidator{} }
func (m *MsgProposalAddValidator) String() string { return proto.CompactTextString(m) }
func (*MsgProposalAddValidator) ProtoMessage()    {}
func (*MsgProposalAddValidator) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a693a1956328e, []int{3}
}
func (m *MsgProposalAddValidator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProposalAddValidator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProposalAddValidator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProposalAddValidator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProposalAddValidator.Merge(m, src)
}
func (m *MsgProposalAddValidator) XXX_Size() int {
	return m.Size()
}
func (m *MsgProposalAddValidator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProposalAddValidator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProposalAddValidator proto.InternalMessageInfo

func (m *MsgProposalAddValidator) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *MsgProposalAddValidator) GetCreator() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *MsgProposalAddValidator) GetPayload() *ProposalAddValidatorPayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type MsgProposalVote struct {
	ChainID    string                                        `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	ProposalID int32                                         `protobuf:"varint,2,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	Creator    github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,3,opt,name=creator,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"creator,omitempty"`
	Value      MsgProposalVote_Value                         `protobuf:"varint,4,opt,name=value,proto3,enum=spn.genesis.v1beta1.MsgProposalVote_Value" json:"value,omitempty"`
}

func (m *MsgProposalVote) Reset()         { *m = MsgProposalVote{} }
func (m *MsgProposalVote) String() string { return proto.CompactTextString(m) }
func (*MsgProposalVote) ProtoMessage()    {}
func (*MsgProposalVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a693a1956328e, []int{4}
}
func (m *MsgProposalVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProposalVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProposalVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProposalVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProposalVote.Merge(m, src)
}
func (m *MsgProposalVote) XXX_Size() int {
	return m.Size()
}
func (m *MsgProposalVote) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProposalVote.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProposalVote proto.InternalMessageInfo

func (m *MsgProposalVote) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *MsgProposalVote) GetProposalID() int32 {
	if m != nil {
		return m.ProposalID
	}
	return 0
}

func (m *MsgProposalVote) GetCreator() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *MsgProposalVote) GetValue() MsgProposalVote_Value {
	if m != nil {
		return m.Value
	}
	return MsgProposalVote_APPROVE
}

func init() {
	proto.RegisterEnum("spn.genesis.v1beta1.MsgProposalVote_Value", MsgProposalVote_Value_name, MsgProposalVote_Value_value)
	proto.RegisterType((*MsgChainCreate)(nil), "spn.genesis.v1beta1.MsgChainCreate")
	proto.RegisterType((*MsgProposalChange)(nil), "spn.genesis.v1beta1.MsgProposalChange")
	proto.RegisterType((*MsgProposalAddAccount)(nil), "spn.genesis.v1beta1.MsgProposalAddAccount")
	proto.RegisterType((*MsgProposalAddValidator)(nil), "spn.genesis.v1beta1.MsgProposalAddValidator")
	proto.RegisterType((*MsgProposalVote)(nil), "spn.genesis.v1beta1.MsgProposalVote")
}

func init() { proto.RegisterFile("genesis/v1beta/messages.proto", fileDescriptor_448a693a1956328e) }

var fileDescriptor_448a693a1956328e = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xb3, 0x94, 0x34, 0xea, 0x14, 0x85, 0x62, 0x40, 0x58, 0x11, 0x98, 0x28, 0x07, 0x54,
	0x90, 0x6a, 0x13, 0x78, 0x01, 0x52, 0x27, 0xa2, 0x2d, 0x54, 0x44, 0x2b, 0xc8, 0x81, 0xdb, 0x66,
	0xbd, 0x72, 0x2c, 0x9c, 0x5d, 0xcb, 0xb3, 0xa9, 0xe8, 0x5b, 0xf0, 0x48, 0x1c, 0x7b, 0xe0, 0xd0,
	0x23, 0x17, 0x10, 0x4a, 0xde, 0x02, 0x71, 0x40, 0x5e, 0xc7, 0xd4, 0x75, 0xa1, 0x1c, 0x2a, 0xe5,
	0x64, 0xcf, 0xec, 0x3f, 0x33, 0xff, 0x27, 0x7b, 0x07, 0x1e, 0x84, 0x42, 0x0a, 0x8c, 0xd0, 0x3b,
	0xea, 0x8e, 0x85, 0x66, 0xde, 0x54, 0x20, 0xb2, 0x50, 0xa0, 0x9b, 0xa4, 0x4a, 0x2b, 0xeb, 0x36,
	0x26, 0xd2, 0x5d, 0x4a, 0xdc, 0x5c, 0xd2, 0x6d, 0xdd, 0x09, 0x55, 0xa8, 0xcc, 0xb9, 0x97, 0xbd,
	0xe5, 0xd2, 0x56, 0xab, 0xd2, 0x49, 0x1f, 0x27, 0x45, 0x9b, 0xce, 0x37, 0x02, 0xcd, 0x43, 0x0c,
	0xfd, 0x09, 0x8b, 0xa4, 0x9f, 0x0a, 0xa6, 0x85, 0x65, 0x43, 0x83, 0x67, 0xe1, 0x7e, 0xdf, 0x26,
	0x6d, 0xb2, 0xbd, 0x41, 0x8b, 0xd0, 0x7a, 0x05, 0x0d, 0x9e, 0x69, 0x54, 0x6a, 0x5f, 0x6b, 0x93,
	0xed, 0x1b, 0xbb, 0xdd, 0x9f, 0xdf, 0x1f, 0xee, 0x84, 0x91, 0x9e, 0xcc, 0xc6, 0x2e, 0x57, 0x53,
	0x8f, 0x2b, 0x9c, 0x2a, 0x5c, 0x3e, 0x76, 0x30, 0xf8, 0xb0, 0x9c, 0xd5, 0xe3, 0xbc, 0x17, 0x04,
	0xa9, 0x40, 0xa4, 0x45, 0x07, 0xeb, 0x3e, 0x6c, 0xa0, 0x9a, 0xa5, 0x5c, 0xbc, 0xa3, 0xaf, 0xed,
	0x35, 0x33, 0xe8, 0x2c, 0x61, 0x39, 0x00, 0x79, 0xb0, 0xc7, 0x70, 0x62, 0x5f, 0x37, 0xc7, 0xa5,
	0x8c, 0xf5, 0x08, 0x9a, 0x91, 0x8c, 0x74, 0xc4, 0xe2, 0x97, 0x39, 0x9c, 0x5d, 0xcf, 0x1c, 0xd1,
	0x4a, 0xb6, 0xf3, 0x99, 0xc0, 0xad, 0x43, 0x0c, 0x87, 0xa9, 0x4a, 0x14, 0xb2, 0xd8, 0x9f, 0x30,
	0x19, 0xae, 0x0c, 0xb1, 0x0f, 0x8d, 0x84, 0x1d, 0xc7, 0x8a, 0x05, 0x06, 0x70, 0xf3, 0xd9, 0x13,
	0xf7, 0x2f, 0x5f, 0xcd, 0x3d, 0x6f, 0x6e, 0x98, 0x57, 0xd0, 0xa2, 0xb4, 0x73, 0x42, 0xe0, 0x6e,
	0x09, 0xa1, 0x17, 0x04, 0x3d, 0xce, 0xd5, 0x4c, 0xea, 0x55, 0x61, 0xec, 0x55, 0x31, 0xdc, 0x4b,
	0x31, 0xce, 0x0c, 0x5e, 0x40, 0xf9, 0x42, 0xe0, 0xde, 0x79, 0x94, 0x11, 0x8b, 0xa3, 0xc0, 0x4c,
	0x59, 0x11, 0xcc, 0x41, 0x15, 0xe6, 0xe9, 0xff, 0x60, 0xfe, 0x58, 0xbc, 0x80, 0xf3, 0x8b, 0xc0,
	0xcd, 0x12, 0xce, 0x48, 0x5d, 0x7a, 0x7b, 0x1c, 0x80, 0x64, 0xa9, 0xdc, 0xef, 0x1b, 0x92, 0x3a,
	0x2d, 0x65, 0xca, 0x98, 0x6b, 0x57, 0xc6, 0x7c, 0x01, 0xf5, 0x23, 0x16, 0xcf, 0x84, 0xb9, 0x3a,
	0xcd, 0x7f, 0xfc, 0x78, 0x15, 0xef, 0xee, 0x28, 0xab, 0xa0, 0x79, 0x61, 0xa7, 0x0d, 0x75, 0x13,
	0x5b, 0x9b, 0xd0, 0xe8, 0x0d, 0x87, 0xf4, 0xcd, 0x68, 0xb0, 0x55, 0xb3, 0x00, 0xd6, 0xe9, 0xe0,
	0x60, 0xe0, 0xbf, 0xdd, 0x22, 0xbb, 0xfe, 0xc9, 0xdc, 0x21, 0xa7, 0x73, 0x87, 0xfc, 0x98, 0x3b,
	0xe4, 0xd3, 0xc2, 0xa9, 0x9d, 0x2e, 0x9c, 0xda, 0xd7, 0x85, 0x53, 0x7b, 0xff, 0xb8, 0xe4, 0x5a,
	0x0b, 0x19, 0x88, 0x74, 0x1a, 0x49, 0xed, 0x61, 0x22, 0xbd, 0x8f, 0x5e, 0xb1, 0x8d, 0x8c, 0xf9,
	0xf1, 0xba, 0xd9, 0x43, 0xcf, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x8a, 0x83, 0x96, 0xef,
	0x04, 0x00, 0x00,
}

func (m *MsgChainCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChainCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChainCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InitialGenesis) > 0 {
		i -= len(m.InitialGenesis)
		copy(dAtA[i:], m.InitialGenesis)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.InitialGenesis)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SourceHash) > 0 {
		i -= len(m.SourceHash)
		copy(dAtA[i:], m.SourceHash)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.SourceHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SourceURL) > 0 {
		i -= len(m.SourceURL)
		copy(dAtA[i:], m.SourceURL)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.SourceURL)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainID) > 0 {
		i -= len(m.ChainID)
		copy(dAtA[i:], m.ChainID)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.ChainID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProposalChange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProposalChange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProposalChange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Payload != nil {
		{
			size, err := m.Payload.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMessages(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainID) > 0 {
		i -= len(m.ChainID)
		copy(dAtA[i:], m.ChainID)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.ChainID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProposalAddAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProposalAddAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProposalAddAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Payload != nil {
		{
			size, err := m.Payload.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMessages(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainID) > 0 {
		i -= len(m.ChainID)
		copy(dAtA[i:], m.ChainID)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.ChainID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProposalAddValidator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProposalAddValidator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProposalAddValidator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Payload != nil {
		{
			size, err := m.Payload.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMessages(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainID) > 0 {
		i -= len(m.ChainID)
		copy(dAtA[i:], m.ChainID)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.ChainID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProposalVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProposalVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProposalVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Value != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.Value))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ProposalID != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.ProposalID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ChainID) > 0 {
		i -= len(m.ChainID)
		copy(dAtA[i:], m.ChainID)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.ChainID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMessages(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessages(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgChainCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainID)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = len(m.SourceURL)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = len(m.SourceHash)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = len(m.InitialGenesis)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	return n
}

func (m *MsgProposalChange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainID)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.Payload != nil {
		l = m.Payload.Size()
		n += 1 + l + sovMessages(uint64(l))
	}
	return n
}

func (m *MsgProposalAddAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainID)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.Payload != nil {
		l = m.Payload.Size()
		n += 1 + l + sovMessages(uint64(l))
	}
	return n
}

func (m *MsgProposalAddValidator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainID)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.Payload != nil {
		l = m.Payload.Size()
		n += 1 + l + sovMessages(uint64(l))
	}
	return n
}

func (m *MsgProposalVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainID)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.ProposalID != 0 {
		n += 1 + sovMessages(uint64(m.ProposalID))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.Value != 0 {
		n += 1 + sovMessages(uint64(m.Value))
	}
	return n
}

func sovMessages(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessages(x uint64) (n int) {
	return sovMessages(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgChainCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChainCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChainCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = append(m.Creator[:0], dAtA[iNdEx:postIndex]...)
			if m.Creator == nil {
				m.Creator = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialGenesis", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitialGenesis = append(m.InitialGenesis[:0], dAtA[iNdEx:postIndex]...)
			if m.InitialGenesis == nil {
				m.InitialGenesis = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProposalChange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProposalChange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProposalChange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = append(m.Creator[:0], dAtA[iNdEx:postIndex]...)
			if m.Creator == nil {
				m.Creator = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Payload == nil {
				m.Payload = &ProposalChangePayload{}
			}
			if err := m.Payload.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProposalAddAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProposalAddAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProposalAddAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = append(m.Creator[:0], dAtA[iNdEx:postIndex]...)
			if m.Creator == nil {
				m.Creator = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Payload == nil {
				m.Payload = &ProposalAddAccountPayload{}
			}
			if err := m.Payload.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProposalAddValidator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProposalAddValidator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProposalAddValidator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = append(m.Creator[:0], dAtA[iNdEx:postIndex]...)
			if m.Creator == nil {
				m.Creator = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Payload == nil {
				m.Payload = &ProposalAddValidatorPayload{}
			}
			if err := m.Payload.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProposalVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProposalVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProposalVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalID", wireType)
			}
			m.ProposalID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProposalID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = append(m.Creator[:0], dAtA[iNdEx:postIndex]...)
			if m.Creator == nil {
				m.Creator = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			m.Value = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Value |= MsgProposalVote_Value(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessages(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessages
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessages
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessages
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessages        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessages          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessages = fmt.Errorf("proto: unexpected end of group")
)
