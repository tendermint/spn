// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: launch/chain.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Chain struct {
	LaunchID               uint64         `protobuf:"varint,1,opt,name=launchID,proto3" json:"launchID,omitempty"`
	CoordinatorID          uint64         `protobuf:"varint,2,opt,name=coordinatorID,proto3" json:"coordinatorID,omitempty"`
	GenesisChainID         string         `protobuf:"bytes,3,opt,name=genesisChainID,proto3" json:"genesisChainID,omitempty"`
	CreatedAt              int64          `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SourceURL              string         `protobuf:"bytes,5,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	SourceHash             string         `protobuf:"bytes,6,opt,name=sourceHash,proto3" json:"sourceHash,omitempty"`
	InitialGenesis         InitialGenesis `protobuf:"bytes,7,opt,name=initialGenesis,proto3" json:"initialGenesis"`
	HasCampaign            bool           `protobuf:"varint,8,opt,name=hasCampaign,proto3" json:"hasCampaign,omitempty"`
	CampaignID             uint64         `protobuf:"varint,9,opt,name=campaignID,proto3" json:"campaignID,omitempty"`
	IsMainnet              bool           `protobuf:"varint,10,opt,name=isMainnet,proto3" json:"isMainnet,omitempty"`
	LaunchTriggered        bool           `protobuf:"varint,11,opt,name=launchTriggered,proto3" json:"launchTriggered,omitempty"`
	LaunchTime             time.Time      `protobuf:"bytes,12,opt,name=launchTime,proto3,stdtime" json:"launchTime"`
	ConsumerRevisionHeight int64          `protobuf:"varint,13,opt,name=consumerRevisionHeight,proto3" json:"consumerRevisionHeight,omitempty"`
	MonitoringConnected    bool           `protobuf:"varint,14,opt,name=monitoringConnected,proto3" json:"monitoringConnected,omitempty"`
	// account balance is the balance given to approved accounts
	// for this chain.  If not set, the balances used will be those
	// contained in the requests
	AccountBalance github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,15,rep,name=accountBalance,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"accountBalance"`
	Metadata       []byte                                   `protobuf:"bytes,16,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_36e96f39bc2e1bde, []int{0}
}
func (m *Chain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return m.Size()
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetLaunchID() uint64 {
	if m != nil {
		return m.LaunchID
	}
	return 0
}

func (m *Chain) GetCoordinatorID() uint64 {
	if m != nil {
		return m.CoordinatorID
	}
	return 0
}

func (m *Chain) GetGenesisChainID() string {
	if m != nil {
		return m.GenesisChainID
	}
	return ""
}

func (m *Chain) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Chain) GetSourceURL() string {
	if m != nil {
		return m.SourceURL
	}
	return ""
}

func (m *Chain) GetSourceHash() string {
	if m != nil {
		return m.SourceHash
	}
	return ""
}

func (m *Chain) GetInitialGenesis() InitialGenesis {
	if m != nil {
		return m.InitialGenesis
	}
	return InitialGenesis{}
}

func (m *Chain) GetHasCampaign() bool {
	if m != nil {
		return m.HasCampaign
	}
	return false
}

func (m *Chain) GetCampaignID() uint64 {
	if m != nil {
		return m.CampaignID
	}
	return 0
}

func (m *Chain) GetIsMainnet() bool {
	if m != nil {
		return m.IsMainnet
	}
	return false
}

func (m *Chain) GetLaunchTriggered() bool {
	if m != nil {
		return m.LaunchTriggered
	}
	return false
}

func (m *Chain) GetLaunchTime() time.Time {
	if m != nil {
		return m.LaunchTime
	}
	return time.Time{}
}

func (m *Chain) GetConsumerRevisionHeight() int64 {
	if m != nil {
		return m.ConsumerRevisionHeight
	}
	return 0
}

func (m *Chain) GetMonitoringConnected() bool {
	if m != nil {
		return m.MonitoringConnected
	}
	return false
}

func (m *Chain) GetAccountBalance() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.AccountBalance
	}
	return nil
}

func (m *Chain) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type InitialGenesis struct {
	// Types that are valid to be assigned to Source:
	//
	//	*InitialGenesis_DefaultInitialGenesis
	//	*InitialGenesis_GenesisURL
	//	*InitialGenesis_ConfigGenesis
	Source isInitialGenesis_Source `protobuf_oneof:"source"`
}

func (m *InitialGenesis) Reset()         { *m = InitialGenesis{} }
func (m *InitialGenesis) String() string { return proto.CompactTextString(m) }
func (*InitialGenesis) ProtoMessage()    {}
func (*InitialGenesis) Descriptor() ([]byte, []int) {
	return fileDescriptor_36e96f39bc2e1bde, []int{1}
}
func (m *InitialGenesis) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InitialGenesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InitialGenesis.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InitialGenesis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitialGenesis.Merge(m, src)
}
func (m *InitialGenesis) XXX_Size() int {
	return m.Size()
}
func (m *InitialGenesis) XXX_DiscardUnknown() {
	xxx_messageInfo_InitialGenesis.DiscardUnknown(m)
}

var xxx_messageInfo_InitialGenesis proto.InternalMessageInfo

type isInitialGenesis_Source interface {
	isInitialGenesis_Source()
	MarshalTo([]byte) (int, error)
	Size() int
}

type InitialGenesis_DefaultInitialGenesis struct {
	DefaultInitialGenesis *DefaultInitialGenesis `protobuf:"bytes,1,opt,name=defaultInitialGenesis,proto3,oneof" json:"defaultInitialGenesis,omitempty"`
}
type InitialGenesis_GenesisURL struct {
	GenesisURL *GenesisURL `protobuf:"bytes,2,opt,name=genesisURL,proto3,oneof" json:"genesisURL,omitempty"`
}
type InitialGenesis_ConfigGenesis struct {
	ConfigGenesis *ConfigGenesis `protobuf:"bytes,3,opt,name=configGenesis,proto3,oneof" json:"configGenesis,omitempty"`
}

func (*InitialGenesis_DefaultInitialGenesis) isInitialGenesis_Source() {}
func (*InitialGenesis_GenesisURL) isInitialGenesis_Source()            {}
func (*InitialGenesis_ConfigGenesis) isInitialGenesis_Source()         {}

func (m *InitialGenesis) GetSource() isInitialGenesis_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *InitialGenesis) GetDefaultInitialGenesis() *DefaultInitialGenesis {
	if x, ok := m.GetSource().(*InitialGenesis_DefaultInitialGenesis); ok {
		return x.DefaultInitialGenesis
	}
	return nil
}

func (m *InitialGenesis) GetGenesisURL() *GenesisURL {
	if x, ok := m.GetSource().(*InitialGenesis_GenesisURL); ok {
		return x.GenesisURL
	}
	return nil
}

func (m *InitialGenesis) GetConfigGenesis() *ConfigGenesis {
	if x, ok := m.GetSource().(*InitialGenesis_ConfigGenesis); ok {
		return x.ConfigGenesis
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*InitialGenesis) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*InitialGenesis_DefaultInitialGenesis)(nil),
		(*InitialGenesis_GenesisURL)(nil),
		(*InitialGenesis_ConfigGenesis)(nil),
	}
}

// DefaultInitialGenesis specifies using the default CLI-generated genesis as an
// initial genesis
type DefaultInitialGenesis struct {
}

func (m *DefaultInitialGenesis) Reset()         { *m = DefaultInitialGenesis{} }
func (m *DefaultInitialGenesis) String() string { return proto.CompactTextString(m) }
func (*DefaultInitialGenesis) ProtoMessage()    {}
func (*DefaultInitialGenesis) Descriptor() ([]byte, []int) {
	return fileDescriptor_36e96f39bc2e1bde, []int{2}
}
func (m *DefaultInitialGenesis) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DefaultInitialGenesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DefaultInitialGenesis.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DefaultInitialGenesis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultInitialGenesis.Merge(m, src)
}
func (m *DefaultInitialGenesis) XXX_Size() int {
	return m.Size()
}
func (m *DefaultInitialGenesis) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultInitialGenesis.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultInitialGenesis proto.InternalMessageInfo

// GenesisURL specifies using a custom genesis from a URL as the initial genesis
type GenesisURL struct {
	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *GenesisURL) Reset()         { *m = GenesisURL{} }
func (m *GenesisURL) String() string { return proto.CompactTextString(m) }
func (*GenesisURL) ProtoMessage()    {}
func (*GenesisURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_36e96f39bc2e1bde, []int{3}
}
func (m *GenesisURL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisURL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisURL.Merge(m, src)
}
func (m *GenesisURL) XXX_Size() int {
	return m.Size()
}
func (m *GenesisURL) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisURL.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisURL proto.InternalMessageInfo

func (m *GenesisURL) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GenesisURL) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// ConfigGenesis specifies using a custom genesis from a Ignite CLI config file
// the file is located in the root specified by sourceURL
type ConfigGenesis struct {
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (m *ConfigGenesis) Reset()         { *m = ConfigGenesis{} }
func (m *ConfigGenesis) String() string { return proto.CompactTextString(m) }
func (*ConfigGenesis) ProtoMessage()    {}
func (*ConfigGenesis) Descriptor() ([]byte, []int) {
	return fileDescriptor_36e96f39bc2e1bde, []int{4}
}
func (m *ConfigGenesis) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfigGenesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfigGenesis.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfigGenesis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigGenesis.Merge(m, src)
}
func (m *ConfigGenesis) XXX_Size() int {
	return m.Size()
}
func (m *ConfigGenesis) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigGenesis.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigGenesis proto.InternalMessageInfo

func (m *ConfigGenesis) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func init() {
	proto.RegisterType((*Chain)(nil), "tendermint.spn.launch.Chain")
	proto.RegisterType((*InitialGenesis)(nil), "tendermint.spn.launch.InitialGenesis")
	proto.RegisterType((*DefaultInitialGenesis)(nil), "tendermint.spn.launch.DefaultInitialGenesis")
	proto.RegisterType((*GenesisURL)(nil), "tendermint.spn.launch.GenesisURL")
	proto.RegisterType((*ConfigGenesis)(nil), "tendermint.spn.launch.ConfigGenesis")
}

func init() { proto.RegisterFile("launch/chain.proto", fileDescriptor_36e96f39bc2e1bde) }

var fileDescriptor_36e96f39bc2e1bde = []byte{
	// 701 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0x8e, 0x93, 0x34, 0x37, 0x39, 0x69, 0xd3, 0x6a, 0xee, 0xed, 0xbd, 0x73, 0x23, 0xe4, 0x98,
	0x50, 0xc0, 0x0b, 0xb0, 0x69, 0x90, 0xd8, 0x93, 0x44, 0x6a, 0x22, 0x95, 0x8d, 0x29, 0x1b, 0x58,
	0x4d, 0xec, 0x89, 0x33, 0x22, 0x9e, 0x89, 0x3c, 0xe3, 0x0a, 0xde, 0xa2, 0x12, 0x2b, 0x36, 0x3c,
	0x00, 0x4f, 0xd2, 0x65, 0x97, 0xac, 0x5a, 0xd4, 0xbe, 0x05, 0x2b, 0xe4, 0xb1, 0xd3, 0xfc, 0x28,
	0x91, 0x58, 0xf9, 0xcc, 0x77, 0xbe, 0xf3, 0x37, 0xf3, 0x1d, 0x03, 0x9a, 0x92, 0x84, 0xfb, 0x13,
	0xd7, 0x9f, 0x10, 0xc6, 0x9d, 0x59, 0x2c, 0x94, 0x40, 0x87, 0x8a, 0xf2, 0x80, 0xc6, 0x11, 0xe3,
	0xca, 0x91, 0x33, 0xee, 0x64, 0x94, 0xe6, 0x3f, 0xa1, 0x08, 0x85, 0x66, 0xb8, 0xa9, 0x95, 0x91,
	0x9b, 0xad, 0x50, 0x88, 0x70, 0x4a, 0x5d, 0x7d, 0x1a, 0x25, 0x63, 0x57, 0xb1, 0x88, 0x4a, 0x45,
	0xa2, 0x59, 0x4e, 0x30, 0x7d, 0x21, 0x23, 0x21, 0xdd, 0x11, 0x91, 0xd4, 0x3d, 0x3f, 0x1e, 0x51,
	0x45, 0x8e, 0x5d, 0x5f, 0xcc, 0xab, 0xb5, 0xbf, 0x56, 0x60, 0xa7, 0x97, 0x56, 0x47, 0x4d, 0xa8,
	0x66, 0xa5, 0x86, 0x7d, 0x6c, 0x58, 0x86, 0x5d, 0xf6, 0xee, 0xcf, 0xe8, 0x08, 0xf6, 0x7c, 0x21,
	0xe2, 0x80, 0x71, 0xa2, 0x44, 0x3c, 0xec, 0xe3, 0xa2, 0x26, 0xac, 0x82, 0xe8, 0x09, 0x34, 0x42,
	0xca, 0xa9, 0x64, 0x52, 0x67, 0x1c, 0xf6, 0x71, 0xc9, 0x32, 0xec, 0x9a, 0xb7, 0x86, 0xa2, 0x07,
	0x50, 0xf3, 0x63, 0x4a, 0x14, 0x0d, 0x5e, 0x2b, 0x5c, 0xb6, 0x0c, 0xbb, 0xe4, 0x2d, 0x80, 0xd4,
	0x2b, 0x45, 0x12, 0xfb, 0xf4, 0x9d, 0x77, 0x8a, 0x77, 0x74, 0x82, 0x05, 0x80, 0x4c, 0x80, 0xec,
	0x30, 0x20, 0x72, 0x82, 0x2b, 0xda, 0xbd, 0x84, 0xa0, 0xb7, 0xd0, 0x60, 0x9c, 0x29, 0x46, 0xa6,
	0x27, 0x59, 0x51, 0xfc, 0x97, 0x65, 0xd8, 0xf5, 0xce, 0x63, 0x67, 0xe3, 0xb5, 0x3a, 0xc3, 0x15,
	0x72, 0xb7, 0x7c, 0x79, 0xdd, 0x2a, 0x78, 0x6b, 0x29, 0x90, 0x05, 0xf5, 0x09, 0x91, 0x3d, 0x12,
	0xcd, 0x08, 0x0b, 0x39, 0xae, 0x5a, 0x86, 0x5d, 0xf5, 0x96, 0xa1, 0xb4, 0x2d, 0x3f, 0xb7, 0x87,
	0x7d, 0x5c, 0xd3, 0xb7, 0xb3, 0x84, 0xa4, 0x43, 0x31, 0xf9, 0x86, 0x30, 0xce, 0xa9, 0xc2, 0xa0,
	0xe3, 0x17, 0x00, 0xb2, 0x61, 0x3f, 0x6b, 0xe7, 0x2c, 0x66, 0x61, 0x48, 0x63, 0x1a, 0xe0, 0xba,
	0xe6, 0xac, 0xc3, 0xa8, 0x0f, 0x90, 0x43, 0x2c, 0xa2, 0x78, 0x57, 0x8f, 0xd6, 0x74, 0x32, 0x11,
	0x38, 0x73, 0x11, 0x38, 0x67, 0x73, 0x11, 0x74, 0xab, 0xe9, 0x3c, 0x17, 0x37, 0x2d, 0xc3, 0x5b,
	0x8a, 0x43, 0xaf, 0xe0, 0x5f, 0x5f, 0x70, 0x99, 0x44, 0x34, 0xf6, 0xe8, 0x39, 0x93, 0x4c, 0xf0,
	0x01, 0x65, 0xe1, 0x44, 0xe1, 0x3d, 0xfd, 0x1a, 0x5b, 0xbc, 0xe8, 0x05, 0xfc, 0x1d, 0x09, 0xce,
	0x94, 0x88, 0x19, 0x0f, 0x7b, 0x82, 0x73, 0xea, 0x2b, 0x1a, 0xe0, 0x86, 0xee, 0x75, 0x93, 0x0b,
	0x7d, 0x33, 0xa0, 0x41, 0x7c, 0x5f, 0x24, 0x5c, 0x75, 0xc9, 0x94, 0x70, 0x9f, 0xe2, 0x7d, 0xab,
	0x64, 0xd7, 0x3b, 0xff, 0x3b, 0x99, 0x30, 0x9d, 0x54, 0x98, 0x4e, 0x2e, 0x4c, 0xa7, 0x27, 0x18,
	0xef, 0x7e, 0x48, 0x7b, 0xfe, 0x75, 0xdd, 0x7a, 0x1a, 0x32, 0x35, 0x49, 0x46, 0x8e, 0x2f, 0x22,
	0x37, 0x57, 0x71, 0xf6, 0x79, 0x2e, 0x83, 0x8f, 0xae, 0xfa, 0x3c, 0xa3, 0x52, 0x07, 0x7c, 0xbf,
	0x69, 0xd9, 0x7f, 0x48, 0x95, 0xde, 0x5a, 0x37, 0xa9, 0xea, 0x23, 0xaa, 0x48, 0x40, 0x14, 0xc1,
	0x07, 0x96, 0x61, 0xef, 0x7a, 0xf7, 0xe7, 0xf6, 0x97, 0x22, 0x34, 0x56, 0xf5, 0x81, 0x02, 0x38,
	0x0c, 0xe8, 0x98, 0x24, 0x53, 0xb5, 0xea, 0xd0, 0x1b, 0x53, 0xef, 0x3c, 0xdb, 0xa2, 0xb2, 0xfe,
	0xa6, 0x98, 0x41, 0xc1, 0xdb, 0x9c, 0x0c, 0xf5, 0x00, 0xf2, 0x95, 0x49, 0x77, 0xa0, 0xa8, 0x53,
	0x3f, 0xdc, 0x92, 0xfa, 0xe4, 0x9e, 0x38, 0x28, 0x78, 0x4b, 0x61, 0xe8, 0x34, 0xdd, 0x59, 0x3e,
	0x66, 0xe1, 0xbc, 0xc5, 0x92, 0xce, 0x73, 0xb4, 0x25, 0x4f, 0x6f, 0x99, 0x3b, 0x28, 0x78, 0xab,
	0xc1, 0xdd, 0x2a, 0x54, 0xb2, 0x2d, 0x6b, 0xff, 0x07, 0x87, 0x1b, 0xc7, 0x69, 0x77, 0x00, 0x16,
	0xcd, 0xa0, 0x03, 0x28, 0x25, 0xf1, 0x54, 0xdf, 0x4b, 0xcd, 0x4b, 0x4d, 0x84, 0xa0, 0x3c, 0x49,
	0x97, 0xb6, 0xa8, 0x21, 0x6d, 0xb7, 0x1f, 0xc1, 0xde, 0x4a, 0xe1, 0x94, 0x34, 0x66, 0x53, 0x9a,
	0xc7, 0x69, 0xbb, 0xdb, 0xbd, 0xbc, 0x35, 0x8d, 0xab, 0x5b, 0xd3, 0xf8, 0x79, 0x6b, 0x1a, 0x17,
	0x77, 0x66, 0xe1, 0xea, 0xce, 0x2c, 0xfc, 0xb8, 0x33, 0x0b, 0xef, 0x97, 0xdf, 0x7d, 0x31, 0x96,
	0x2b, 0x67, 0xdc, 0xfd, 0xe4, 0xe6, 0xff, 0x56, 0xfd, 0xfa, 0xa3, 0x8a, 0x5e, 0x8e, 0x97, 0xbf,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x73, 0x55, 0xe7, 0xfe, 0x72, 0x05, 0x00, 0x00,
}

func (m *Chain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Chain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Chain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintChain(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.AccountBalance) > 0 {
		for iNdEx := len(m.AccountBalance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AccountBalance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChain(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x7a
		}
	}
	if m.MonitoringConnected {
		i--
		if m.MonitoringConnected {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x70
	}
	if m.ConsumerRevisionHeight != 0 {
		i = encodeVarintChain(dAtA, i, uint64(m.ConsumerRevisionHeight))
		i--
		dAtA[i] = 0x68
	}
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.LaunchTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.LaunchTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintChain(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x62
	if m.LaunchTriggered {
		i--
		if m.LaunchTriggered {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.IsMainnet {
		i--
		if m.IsMainnet {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.CampaignID != 0 {
		i = encodeVarintChain(dAtA, i, uint64(m.CampaignID))
		i--
		dAtA[i] = 0x48
	}
	if m.HasCampaign {
		i--
		if m.HasCampaign {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	{
		size, err := m.InitialGenesis.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintChain(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if len(m.SourceHash) > 0 {
		i -= len(m.SourceHash)
		copy(dAtA[i:], m.SourceHash)
		i = encodeVarintChain(dAtA, i, uint64(len(m.SourceHash)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SourceURL) > 0 {
		i -= len(m.SourceURL)
		copy(dAtA[i:], m.SourceURL)
		i = encodeVarintChain(dAtA, i, uint64(len(m.SourceURL)))
		i--
		dAtA[i] = 0x2a
	}
	if m.CreatedAt != 0 {
		i = encodeVarintChain(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x20
	}
	if len(m.GenesisChainID) > 0 {
		i -= len(m.GenesisChainID)
		copy(dAtA[i:], m.GenesisChainID)
		i = encodeVarintChain(dAtA, i, uint64(len(m.GenesisChainID)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CoordinatorID != 0 {
		i = encodeVarintChain(dAtA, i, uint64(m.CoordinatorID))
		i--
		dAtA[i] = 0x10
	}
	if m.LaunchID != 0 {
		i = encodeVarintChain(dAtA, i, uint64(m.LaunchID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *InitialGenesis) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InitialGenesis) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InitialGenesis) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Source != nil {
		{
			size := m.Source.Size()
			i -= size
			if _, err := m.Source.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *InitialGenesis_DefaultInitialGenesis) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InitialGenesis_DefaultInitialGenesis) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DefaultInitialGenesis != nil {
		{
			size, err := m.DefaultInitialGenesis.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChain(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *InitialGenesis_GenesisURL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InitialGenesis_GenesisURL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GenesisURL != nil {
		{
			size, err := m.GenesisURL.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChain(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *InitialGenesis_ConfigGenesis) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InitialGenesis_ConfigGenesis) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ConfigGenesis != nil {
		{
			size, err := m.ConfigGenesis.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChain(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *DefaultInitialGenesis) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DefaultInitialGenesis) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DefaultInitialGenesis) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GenesisURL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisURL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisURL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintChain(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintChain(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConfigGenesis) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfigGenesis) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConfigGenesis) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.File) > 0 {
		i -= len(m.File)
		copy(dAtA[i:], m.File)
		i = encodeVarintChain(dAtA, i, uint64(len(m.File)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintChain(dAtA []byte, offset int, v uint64) int {
	offset -= sovChain(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Chain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LaunchID != 0 {
		n += 1 + sovChain(uint64(m.LaunchID))
	}
	if m.CoordinatorID != 0 {
		n += 1 + sovChain(uint64(m.CoordinatorID))
	}
	l = len(m.GenesisChainID)
	if l > 0 {
		n += 1 + l + sovChain(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovChain(uint64(m.CreatedAt))
	}
	l = len(m.SourceURL)
	if l > 0 {
		n += 1 + l + sovChain(uint64(l))
	}
	l = len(m.SourceHash)
	if l > 0 {
		n += 1 + l + sovChain(uint64(l))
	}
	l = m.InitialGenesis.Size()
	n += 1 + l + sovChain(uint64(l))
	if m.HasCampaign {
		n += 2
	}
	if m.CampaignID != 0 {
		n += 1 + sovChain(uint64(m.CampaignID))
	}
	if m.IsMainnet {
		n += 2
	}
	if m.LaunchTriggered {
		n += 2
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LaunchTime)
	n += 1 + l + sovChain(uint64(l))
	if m.ConsumerRevisionHeight != 0 {
		n += 1 + sovChain(uint64(m.ConsumerRevisionHeight))
	}
	if m.MonitoringConnected {
		n += 2
	}
	if len(m.AccountBalance) > 0 {
		for _, e := range m.AccountBalance {
			l = e.Size()
			n += 1 + l + sovChain(uint64(l))
		}
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 2 + l + sovChain(uint64(l))
	}
	return n
}

func (m *InitialGenesis) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Source != nil {
		n += m.Source.Size()
	}
	return n
}

func (m *InitialGenesis_DefaultInitialGenesis) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DefaultInitialGenesis != nil {
		l = m.DefaultInitialGenesis.Size()
		n += 1 + l + sovChain(uint64(l))
	}
	return n
}
func (m *InitialGenesis_GenesisURL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GenesisURL != nil {
		l = m.GenesisURL.Size()
		n += 1 + l + sovChain(uint64(l))
	}
	return n
}
func (m *InitialGenesis_ConfigGenesis) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConfigGenesis != nil {
		l = m.ConfigGenesis.Size()
		n += 1 + l + sovChain(uint64(l))
	}
	return n
}
func (m *DefaultInitialGenesis) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GenesisURL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovChain(uint64(l))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovChain(uint64(l))
	}
	return n
}

func (m *ConfigGenesis) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.File)
	if l > 0 {
		n += 1 + l + sovChain(uint64(l))
	}
	return n
}

func sovChain(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozChain(x uint64) (n int) {
	return sovChain(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Chain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChain
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Chain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Chain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchID", wireType)
			}
			m.LaunchID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoordinatorID", wireType)
			}
			m.CoordinatorID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoordinatorID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GenesisChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialGenesis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InitialGenesis.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCampaign", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasCampaign = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignID", wireType)
			}
			m.CampaignID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampaignID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMainnet", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsMainnet = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchTriggered", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LaunchTriggered = bool(v != 0)
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.LaunchTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumerRevisionHeight", wireType)
			}
			m.ConsumerRevisionHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConsumerRevisionHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MonitoringConnected", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MonitoringConnected = bool(v != 0)
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountBalance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountBalance = append(m.AccountBalance, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.AccountBalance[len(m.AccountBalance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata[:0], dAtA[iNdEx:postIndex]...)
			if m.Metadata == nil {
				m.Metadata = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChain(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthChain
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InitialGenesis) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChain
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InitialGenesis: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InitialGenesis: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultInitialGenesis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DefaultInitialGenesis{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Source = &InitialGenesis_DefaultInitialGenesis{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisURL", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GenesisURL{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Source = &InitialGenesis_GenesisURL{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigGenesis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ConfigGenesis{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Source = &InitialGenesis_ConfigGenesis{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChain(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthChain
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DefaultInitialGenesis) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChain
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DefaultInitialGenesis: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DefaultInitialGenesis: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChain(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthChain
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenesisURL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChain
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisURL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisURL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChain(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthChain
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfigGenesis) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChain
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfigGenesis: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfigGenesis: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChain
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChain
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChain
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.File = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChain(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthChain
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChain(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChain
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChain
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChain
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthChain
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupChain
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthChain
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthChain        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChain          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupChain = fmt.Errorf("proto: unexpected end of group")
)
