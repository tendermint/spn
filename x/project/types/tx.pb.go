// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: project/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateProject struct {
	Coordinator string                                   `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	ProjectName string                                   `protobuf:"bytes,2,opt,name=projectName,proto3" json:"projectName,omitempty"`
	TotalSupply github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=totalSupply,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"totalSupply"`
	Metadata    []byte                                   `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *MsgCreateProject) Reset()         { *m = MsgCreateProject{} }
func (m *MsgCreateProject) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProject) ProtoMessage()    {}
func (*MsgCreateProject) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{0}
}
func (m *MsgCreateProject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProject.Merge(m, src)
}
func (m *MsgCreateProject) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProject proto.InternalMessageInfo

func (m *MsgCreateProject) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgCreateProject) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *MsgCreateProject) GetTotalSupply() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.TotalSupply
	}
	return nil
}

func (m *MsgCreateProject) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type MsgCreateProjectResponse struct {
	ProjectID uint64 `protobuf:"varint,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
}

func (m *MsgCreateProjectResponse) Reset()         { *m = MsgCreateProjectResponse{} }
func (m *MsgCreateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProjectResponse) ProtoMessage()    {}
func (*MsgCreateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{1}
}
func (m *MsgCreateProjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProjectResponse.Merge(m, src)
}
func (m *MsgCreateProjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProjectResponse proto.InternalMessageInfo

func (m *MsgCreateProjectResponse) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

type MsgEditProject struct {
	Coordinator string `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	ProjectID   uint64 `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Metadata    []byte `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *MsgEditProject) Reset()         { *m = MsgEditProject{} }
func (m *MsgEditProject) String() string { return proto.CompactTextString(m) }
func (*MsgEditProject) ProtoMessage()    {}
func (*MsgEditProject) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{2}
}
func (m *MsgEditProject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditProject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditProject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditProject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditProject.Merge(m, src)
}
func (m *MsgEditProject) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditProject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditProject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditProject proto.InternalMessageInfo

func (m *MsgEditProject) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgEditProject) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *MsgEditProject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgEditProject) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type MsgEditProjectResponse struct {
}

func (m *MsgEditProjectResponse) Reset()         { *m = MsgEditProjectResponse{} }
func (m *MsgEditProjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditProjectResponse) ProtoMessage()    {}
func (*MsgEditProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{3}
}
func (m *MsgEditProjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditProjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditProjectResponse.Merge(m, src)
}
func (m *MsgEditProjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditProjectResponse proto.InternalMessageInfo

type MsgUpdateTotalSupply struct {
	Coordinator       string                                   `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	ProjectID         uint64                                   `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	TotalSupplyUpdate github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=totalSupplyUpdate,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"totalSupplyUpdate"`
}

func (m *MsgUpdateTotalSupply) Reset()         { *m = MsgUpdateTotalSupply{} }
func (m *MsgUpdateTotalSupply) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTotalSupply) ProtoMessage()    {}
func (*MsgUpdateTotalSupply) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{4}
}
func (m *MsgUpdateTotalSupply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTotalSupply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTotalSupply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTotalSupply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTotalSupply.Merge(m, src)
}
func (m *MsgUpdateTotalSupply) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTotalSupply) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTotalSupply.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTotalSupply proto.InternalMessageInfo

func (m *MsgUpdateTotalSupply) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgUpdateTotalSupply) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *MsgUpdateTotalSupply) GetTotalSupplyUpdate() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.TotalSupplyUpdate
	}
	return nil
}

type MsgUpdateTotalSupplyResponse struct {
}

func (m *MsgUpdateTotalSupplyResponse) Reset()         { *m = MsgUpdateTotalSupplyResponse{} }
func (m *MsgUpdateTotalSupplyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTotalSupplyResponse) ProtoMessage()    {}
func (*MsgUpdateTotalSupplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{5}
}
func (m *MsgUpdateTotalSupplyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTotalSupplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTotalSupplyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTotalSupplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTotalSupplyResponse.Merge(m, src)
}
func (m *MsgUpdateTotalSupplyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTotalSupplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTotalSupplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTotalSupplyResponse proto.InternalMessageInfo

type MsgUpdateSpecialAllocations struct {
	Coordinator        string             `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	ProjectID          uint64             `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	SpecialAllocations SpecialAllocations `protobuf:"bytes,3,opt,name=specialAllocations,proto3" json:"specialAllocations"`
}

func (m *MsgUpdateSpecialAllocations) Reset()         { *m = MsgUpdateSpecialAllocations{} }
func (m *MsgUpdateSpecialAllocations) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSpecialAllocations) ProtoMessage()    {}
func (*MsgUpdateSpecialAllocations) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{6}
}
func (m *MsgUpdateSpecialAllocations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSpecialAllocations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSpecialAllocations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSpecialAllocations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSpecialAllocations.Merge(m, src)
}
func (m *MsgUpdateSpecialAllocations) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSpecialAllocations) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSpecialAllocations.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSpecialAllocations proto.InternalMessageInfo

func (m *MsgUpdateSpecialAllocations) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgUpdateSpecialAllocations) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *MsgUpdateSpecialAllocations) GetSpecialAllocations() SpecialAllocations {
	if m != nil {
		return m.SpecialAllocations
	}
	return SpecialAllocations{}
}

type MsgUpdateSpecialAllocationsResponse struct {
}

func (m *MsgUpdateSpecialAllocationsResponse) Reset()         { *m = MsgUpdateSpecialAllocationsResponse{} }
func (m *MsgUpdateSpecialAllocationsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSpecialAllocationsResponse) ProtoMessage()    {}
func (*MsgUpdateSpecialAllocationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{7}
}
func (m *MsgUpdateSpecialAllocationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSpecialAllocationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSpecialAllocationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSpecialAllocationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSpecialAllocationsResponse.Merge(m, src)
}
func (m *MsgUpdateSpecialAllocationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSpecialAllocationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSpecialAllocationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSpecialAllocationsResponse proto.InternalMessageInfo

type MsgInitializeMainnet struct {
	Coordinator    string `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	ProjectID      uint64 `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	SourceURL      string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	SourceHash     string `protobuf:"bytes,4,opt,name=sourceHash,proto3" json:"sourceHash,omitempty"`
	MainnetChainID string `protobuf:"bytes,5,opt,name=mainnetChainID,proto3" json:"mainnetChainID,omitempty"`
}

func (m *MsgInitializeMainnet) Reset()         { *m = MsgInitializeMainnet{} }
func (m *MsgInitializeMainnet) String() string { return proto.CompactTextString(m) }
func (*MsgInitializeMainnet) ProtoMessage()    {}
func (*MsgInitializeMainnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{8}
}
func (m *MsgInitializeMainnet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitializeMainnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitializeMainnet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitializeMainnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitializeMainnet.Merge(m, src)
}
func (m *MsgInitializeMainnet) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitializeMainnet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitializeMainnet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitializeMainnet proto.InternalMessageInfo

func (m *MsgInitializeMainnet) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgInitializeMainnet) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *MsgInitializeMainnet) GetSourceURL() string {
	if m != nil {
		return m.SourceURL
	}
	return ""
}

func (m *MsgInitializeMainnet) GetSourceHash() string {
	if m != nil {
		return m.SourceHash
	}
	return ""
}

func (m *MsgInitializeMainnet) GetMainnetChainID() string {
	if m != nil {
		return m.MainnetChainID
	}
	return ""
}

type MsgInitializeMainnetResponse struct {
	MainnetID uint64 `protobuf:"varint,1,opt,name=mainnetID,proto3" json:"mainnetID,omitempty"`
}

func (m *MsgInitializeMainnetResponse) Reset()         { *m = MsgInitializeMainnetResponse{} }
func (m *MsgInitializeMainnetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInitializeMainnetResponse) ProtoMessage()    {}
func (*MsgInitializeMainnetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{9}
}
func (m *MsgInitializeMainnetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInitializeMainnetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInitializeMainnetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInitializeMainnetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInitializeMainnetResponse.Merge(m, src)
}
func (m *MsgInitializeMainnetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInitializeMainnetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInitializeMainnetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInitializeMainnetResponse proto.InternalMessageInfo

func (m *MsgInitializeMainnetResponse) GetMainnetID() uint64 {
	if m != nil {
		return m.MainnetID
	}
	return 0
}

type MsgMintVouchers struct {
	Coordinator string `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	ProjectID   uint64 `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Shares      Shares `protobuf:"bytes,3,rep,name=shares,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=Shares" json:"shares"`
}

func (m *MsgMintVouchers) Reset()         { *m = MsgMintVouchers{} }
func (m *MsgMintVouchers) String() string { return proto.CompactTextString(m) }
func (*MsgMintVouchers) ProtoMessage()    {}
func (*MsgMintVouchers) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{10}
}
func (m *MsgMintVouchers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMintVouchers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMintVouchers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMintVouchers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMintVouchers.Merge(m, src)
}
func (m *MsgMintVouchers) XXX_Size() int {
	return m.Size()
}
func (m *MsgMintVouchers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMintVouchers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMintVouchers proto.InternalMessageInfo

func (m *MsgMintVouchers) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgMintVouchers) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *MsgMintVouchers) GetShares() Shares {
	if m != nil {
		return m.Shares
	}
	return nil
}

type MsgMintVouchersResponse struct {
}

func (m *MsgMintVouchersResponse) Reset()         { *m = MsgMintVouchersResponse{} }
func (m *MsgMintVouchersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMintVouchersResponse) ProtoMessage()    {}
func (*MsgMintVouchersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{11}
}
func (m *MsgMintVouchersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMintVouchersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMintVouchersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMintVouchersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMintVouchersResponse.Merge(m, src)
}
func (m *MsgMintVouchersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMintVouchersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMintVouchersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMintVouchersResponse proto.InternalMessageInfo

type MsgBurnVouchers struct {
	Sender    string                                   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ProjectID uint64                                   `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Vouchers  github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=vouchers,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"vouchers"`
}

func (m *MsgBurnVouchers) Reset()         { *m = MsgBurnVouchers{} }
func (m *MsgBurnVouchers) String() string { return proto.CompactTextString(m) }
func (*MsgBurnVouchers) ProtoMessage()    {}
func (*MsgBurnVouchers) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{12}
}
func (m *MsgBurnVouchers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBurnVouchers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBurnVouchers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBurnVouchers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBurnVouchers.Merge(m, src)
}
func (m *MsgBurnVouchers) XXX_Size() int {
	return m.Size()
}
func (m *MsgBurnVouchers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBurnVouchers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBurnVouchers proto.InternalMessageInfo

func (m *MsgBurnVouchers) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgBurnVouchers) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *MsgBurnVouchers) GetVouchers() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Vouchers
	}
	return nil
}

type MsgBurnVouchersResponse struct {
}

func (m *MsgBurnVouchersResponse) Reset()         { *m = MsgBurnVouchersResponse{} }
func (m *MsgBurnVouchersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBurnVouchersResponse) ProtoMessage()    {}
func (*MsgBurnVouchersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{13}
}
func (m *MsgBurnVouchersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBurnVouchersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBurnVouchersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBurnVouchersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBurnVouchersResponse.Merge(m, src)
}
func (m *MsgBurnVouchersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBurnVouchersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBurnVouchersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBurnVouchersResponse proto.InternalMessageInfo

type MsgRedeemVouchers struct {
	Sender    string                                   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ProjectID uint64                                   `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Account   string                                   `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Vouchers  github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,4,rep,name=vouchers,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"vouchers"`
}

func (m *MsgRedeemVouchers) Reset()         { *m = MsgRedeemVouchers{} }
func (m *MsgRedeemVouchers) String() string { return proto.CompactTextString(m) }
func (*MsgRedeemVouchers) ProtoMessage()    {}
func (*MsgRedeemVouchers) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{14}
}
func (m *MsgRedeemVouchers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRedeemVouchers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRedeemVouchers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRedeemVouchers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRedeemVouchers.Merge(m, src)
}
func (m *MsgRedeemVouchers) XXX_Size() int {
	return m.Size()
}
func (m *MsgRedeemVouchers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRedeemVouchers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRedeemVouchers proto.InternalMessageInfo

func (m *MsgRedeemVouchers) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRedeemVouchers) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *MsgRedeemVouchers) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *MsgRedeemVouchers) GetVouchers() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Vouchers
	}
	return nil
}

type MsgRedeemVouchersResponse struct {
}

func (m *MsgRedeemVouchersResponse) Reset()         { *m = MsgRedeemVouchersResponse{} }
func (m *MsgRedeemVouchersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRedeemVouchersResponse) ProtoMessage()    {}
func (*MsgRedeemVouchersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{15}
}
func (m *MsgRedeemVouchersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRedeemVouchersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRedeemVouchersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRedeemVouchersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRedeemVouchersResponse.Merge(m, src)
}
func (m *MsgRedeemVouchersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRedeemVouchersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRedeemVouchersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRedeemVouchersResponse proto.InternalMessageInfo

type MsgUnredeemVouchers struct {
	Sender    string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ProjectID uint64 `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Shares    Shares `protobuf:"bytes,4,rep,name=shares,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=Shares" json:"shares"`
}

func (m *MsgUnredeemVouchers) Reset()         { *m = MsgUnredeemVouchers{} }
func (m *MsgUnredeemVouchers) String() string { return proto.CompactTextString(m) }
func (*MsgUnredeemVouchers) ProtoMessage()    {}
func (*MsgUnredeemVouchers) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{16}
}
func (m *MsgUnredeemVouchers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnredeemVouchers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnredeemVouchers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnredeemVouchers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnredeemVouchers.Merge(m, src)
}
func (m *MsgUnredeemVouchers) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnredeemVouchers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnredeemVouchers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnredeemVouchers proto.InternalMessageInfo

func (m *MsgUnredeemVouchers) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgUnredeemVouchers) GetProjectID() uint64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *MsgUnredeemVouchers) GetShares() Shares {
	if m != nil {
		return m.Shares
	}
	return nil
}

type MsgUnredeemVouchersResponse struct {
}

func (m *MsgUnredeemVouchersResponse) Reset()         { *m = MsgUnredeemVouchersResponse{} }
func (m *MsgUnredeemVouchersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnredeemVouchersResponse) ProtoMessage()    {}
func (*MsgUnredeemVouchersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_29af2eb8fda0baa4, []int{17}
}
func (m *MsgUnredeemVouchersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnredeemVouchersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnredeemVouchersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnredeemVouchersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnredeemVouchersResponse.Merge(m, src)
}
func (m *MsgUnredeemVouchersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnredeemVouchersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnredeemVouchersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnredeemVouchersResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateProject)(nil), "tendermint.spn.project.MsgCreateProject")
	proto.RegisterType((*MsgCreateProjectResponse)(nil), "tendermint.spn.project.MsgCreateProjectResponse")
	proto.RegisterType((*MsgEditProject)(nil), "tendermint.spn.project.MsgEditProject")
	proto.RegisterType((*MsgEditProjectResponse)(nil), "tendermint.spn.project.MsgEditProjectResponse")
	proto.RegisterType((*MsgUpdateTotalSupply)(nil), "tendermint.spn.project.MsgUpdateTotalSupply")
	proto.RegisterType((*MsgUpdateTotalSupplyResponse)(nil), "tendermint.spn.project.MsgUpdateTotalSupplyResponse")
	proto.RegisterType((*MsgUpdateSpecialAllocations)(nil), "tendermint.spn.project.MsgUpdateSpecialAllocations")
	proto.RegisterType((*MsgUpdateSpecialAllocationsResponse)(nil), "tendermint.spn.project.MsgUpdateSpecialAllocationsResponse")
	proto.RegisterType((*MsgInitializeMainnet)(nil), "tendermint.spn.project.MsgInitializeMainnet")
	proto.RegisterType((*MsgInitializeMainnetResponse)(nil), "tendermint.spn.project.MsgInitializeMainnetResponse")
	proto.RegisterType((*MsgMintVouchers)(nil), "tendermint.spn.project.MsgMintVouchers")
	proto.RegisterType((*MsgMintVouchersResponse)(nil), "tendermint.spn.project.MsgMintVouchersResponse")
	proto.RegisterType((*MsgBurnVouchers)(nil), "tendermint.spn.project.MsgBurnVouchers")
	proto.RegisterType((*MsgBurnVouchersResponse)(nil), "tendermint.spn.project.MsgBurnVouchersResponse")
	proto.RegisterType((*MsgRedeemVouchers)(nil), "tendermint.spn.project.MsgRedeemVouchers")
	proto.RegisterType((*MsgRedeemVouchersResponse)(nil), "tendermint.spn.project.MsgRedeemVouchersResponse")
	proto.RegisterType((*MsgUnredeemVouchers)(nil), "tendermint.spn.project.MsgUnredeemVouchers")
	proto.RegisterType((*MsgUnredeemVouchersResponse)(nil), "tendermint.spn.project.MsgUnredeemVouchersResponse")
}

func init() { proto.RegisterFile("project/tx.proto", fileDescriptor_29af2eb8fda0baa4) }

var fileDescriptor_29af2eb8fda0baa4 = []byte{
	// 894 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xcd, 0x6e, 0xeb, 0x44,
	0x14, 0x8e, 0x9b, 0x10, 0x9a, 0x93, 0x52, 0x5a, 0x53, 0x8a, 0xeb, 0x16, 0x37, 0x18, 0xd1, 0xa6,
	0xfc, 0xd8, 0xb4, 0x65, 0x01, 0x82, 0x0d, 0x49, 0x91, 0xa8, 0x84, 0x11, 0x72, 0x29, 0x0b, 0x58,
	0xc0, 0xc4, 0x19, 0x39, 0xa6, 0xc9, 0x8c, 0xe5, 0x99, 0x94, 0x96, 0x15, 0x0f, 0x00, 0x12, 0x42,
	0x2c, 0x78, 0x00, 0x56, 0xbc, 0x01, 0x12, 0x12, 0xdb, 0x2e, 0xbb, 0x64, 0x81, 0x0a, 0x6a, 0x5f,
	0xe2, 0xea, 0x4a, 0x57, 0xba, 0xf2, 0x4f, 0x1c, 0xc7, 0x4e, 0xdd, 0xf4, 0xe6, 0xea, 0xf6, 0xae,
	0x9a, 0x39, 0xfd, 0xe6, 0x3b, 0xe7, 0xfb, 0xe6, 0xcc, 0x99, 0x04, 0x16, 0x5c, 0x8f, 0x7e, 0x8b,
	0x2d, 0xae, 0xf3, 0x13, 0xcd, 0xf5, 0x28, 0xa7, 0xe2, 0x32, 0xc7, 0xa4, 0x8d, 0xbd, 0x9e, 0x43,
	0xb8, 0xc6, 0x5c, 0xa2, 0x45, 0x00, 0x79, 0xc9, 0xa6, 0x36, 0x0d, 0x20, 0xba, 0xff, 0x29, 0x44,
	0xcb, 0x8a, 0x45, 0x59, 0x8f, 0x32, 0xbd, 0x85, 0x18, 0xd6, 0x8f, 0xb7, 0x5b, 0x98, 0xa3, 0x6d,
	0xdd, 0xa2, 0x0e, 0x89, 0xfe, 0xff, 0xe2, 0x80, 0xff, 0x18, 0x33, 0xee, 0x10, 0x3b, 0x0a, 0xbf,
	0x32, 0x08, 0x33, 0x17, 0x5b, 0x0e, 0xea, 0x7e, 0x8d, 0xba, 0x5d, 0x6a, 0x21, 0xee, 0x50, 0xc2,
	0x42, 0x88, 0xfa, 0xd3, 0x0c, 0x2c, 0x18, 0xcc, 0x6e, 0x7a, 0x18, 0x71, 0xfc, 0x59, 0x08, 0x17,
	0x6b, 0x50, 0xb5, 0x28, 0xf5, 0xda, 0x0e, 0x41, 0x9c, 0x7a, 0x92, 0x50, 0x13, 0xea, 0x15, 0x33,
	0x19, 0xf2, 0x11, 0x11, 0xf7, 0xa7, 0xa8, 0x87, 0xa5, 0x99, 0x10, 0x91, 0x08, 0x89, 0xbf, 0x09,
	0x50, 0xe5, 0x94, 0xa3, 0xee, 0x41, 0xdf, 0x75, 0xbb, 0xa7, 0x52, 0xb1, 0x56, 0xac, 0x57, 0x77,
	0x56, 0xb4, 0x50, 0x89, 0xe6, 0x2b, 0xd1, 0x22, 0x25, 0x5a, 0x93, 0x3a, 0xa4, 0xf1, 0xd5, 0xd9,
	0xc5, 0x7a, 0xe1, 0xfe, 0xc5, 0xfa, 0xa6, 0xed, 0xf0, 0x4e, 0xbf, 0xa5, 0x59, 0xb4, 0xa7, 0x47,
	0xb2, 0xc3, 0x3f, 0x6f, 0xb1, 0xf6, 0x91, 0xce, 0x4f, 0x5d, 0xcc, 0x82, 0x0d, 0x7f, 0xfc, 0xb7,
	0x5e, 0x9f, 0x10, 0xca, 0xcc, 0x64, 0x29, 0xa2, 0x0c, 0xb3, 0x3d, 0xcc, 0x51, 0x1b, 0x71, 0x24,
	0x95, 0x6a, 0x42, 0x7d, 0xce, 0x8c, 0xd7, 0xea, 0xbb, 0x20, 0xa5, 0xed, 0x30, 0x31, 0x73, 0x29,
	0x61, 0x58, 0x5c, 0x83, 0x4a, 0xa4, 0x70, 0x7f, 0x2f, 0x30, 0xa5, 0x64, 0x0e, 0x03, 0xea, 0x0f,
	0x02, 0xcc, 0x1b, 0xcc, 0xfe, 0xa8, 0xed, 0xf0, 0xc9, 0x7d, 0x1c, 0xa1, 0x9c, 0x49, 0x51, 0x8a,
	0x22, 0x94, 0x88, 0x6f, 0x6f, 0x31, 0xd8, 0x18, 0x7c, 0xce, 0x2d, 0x5e, 0x82, 0xe5, 0xd1, 0x0a,
	0x06, 0xa5, 0xab, 0x0f, 0x04, 0x58, 0x32, 0x98, 0x7d, 0xe8, 0xb6, 0x11, 0xc7, 0x9f, 0x27, 0xbc,
	0x98, 0xb6, 0xc4, 0xdf, 0x05, 0x58, 0x4c, 0x78, 0x1b, 0x26, 0xb8, 0xe3, 0xc3, 0xce, 0x16, 0xa4,
	0x2a, 0xb0, 0x36, 0x4e, 0x7e, 0xec, 0xcf, 0xdf, 0x02, 0xac, 0xc6, 0x80, 0x83, 0xf0, 0xb6, 0x7c,
	0x38, 0xbc, 0x2c, 0x53, 0xdb, 0xf4, 0x0d, 0x88, 0x2c, 0xc3, 0x1a, 0x9c, 0x6b, 0x75, 0xe7, 0x75,
	0x6d, 0xfc, 0x2c, 0xd0, 0xb2, 0x75, 0x34, 0x4a, 0xbe, 0x6f, 0xe6, 0x18, 0x2e, 0xf5, 0x35, 0x78,
	0x35, 0x47, 0x40, 0x2c, 0xf4, 0xaf, 0xb0, 0x11, 0xf6, 0x89, 0xc3, 0x1d, 0xd4, 0x75, 0xbe, 0xc7,
	0x06, 0x72, 0x08, 0xc1, 0xd3, 0xf7, 0xea, 0x1a, 0x54, 0x18, 0xed, 0x7b, 0x16, 0x3e, 0x34, 0x3f,
	0x89, 0x1a, 0x76, 0x18, 0x10, 0x15, 0x80, 0x70, 0xf1, 0x31, 0x62, 0x9d, 0xa0, 0x6f, 0x2b, 0x66,
	0x22, 0x22, 0x6e, 0xc0, 0x7c, 0x2f, 0x2c, 0xa4, 0xd9, 0x41, 0x0e, 0xd9, 0xdf, 0x93, 0x9e, 0x09,
	0x30, 0xa9, 0xa8, 0xfa, 0x41, 0x70, 0x8e, 0x99, 0xea, 0x93, 0x57, 0x34, 0xda, 0x31, 0xbc, 0xa2,
	0x71, 0xc0, 0x3f, 0xe5, 0xe7, 0x0d, 0x66, 0x1b, 0x0e, 0xe1, 0x5f, 0xd0, 0xbe, 0xd5, 0xc1, 0xde,
	0xf4, 0x27, 0xdb, 0x85, 0x32, 0xeb, 0x20, 0x0f, 0xb3, 0x9b, 0x9b, 0xfe, 0xbd, 0xdb, 0x37, 0x7d,
	0xf9, 0x20, 0xe0, 0x36, 0xa3, 0x1c, 0xea, 0x0a, 0xbc, 0x94, 0x12, 0x10, 0x9f, 0xec, 0xbf, 0xa1,
	0xb8, 0x46, 0xdf, 0x23, 0xb1, 0xb8, 0x65, 0x28, 0xb3, 0xa0, 0xb7, 0x22, 0x5d, 0xd1, 0xea, 0x06,
	0x49, 0xbf, 0x08, 0x30, 0x7b, 0x1c, 0x51, 0xdc, 0xf1, 0x55, 0x8e, 0xeb, 0x88, 0x94, 0x27, 0xd5,
	0xc5, 0xca, 0xef, 0x09, 0xb0, 0x68, 0x30, 0xdb, 0xc4, 0x6d, 0x8c, 0x7b, 0x53, 0x6a, 0x97, 0xe0,
	0x59, 0x64, 0x59, 0xb4, 0x4f, 0x78, 0xd4, 0xc4, 0x83, 0xe5, 0xa8, 0x2b, 0xa5, 0xa7, 0xc4, 0x95,
	0x55, 0x58, 0xc9, 0x28, 0x8f, 0x7d, 0xf9, 0x53, 0x80, 0x17, 0xfc, 0x99, 0x40, 0xbc, 0xc7, 0xe1,
	0xcc, 0xb0, 0xd1, 0x4b, 0x4f, 0xa0, 0xd1, 0x5f, 0x0e, 0xe7, 0x71, 0xaa, 0xf4, 0x81, 0xb4, 0x9d,
	0x5f, 0x67, 0xa1, 0x68, 0x30, 0x5b, 0x3c, 0x82, 0xe7, 0x46, 0xbf, 0xba, 0xd4, 0xaf, 0x1b, 0xa6,
	0xe9, 0x57, 0x5d, 0x7e, 0x7b, 0x52, 0x64, 0x3c, 0x5c, 0x30, 0x54, 0x93, 0xaf, 0xfb, 0x46, 0x0e,
	0x41, 0x02, 0x27, 0x6b, 0x93, 0xe1, 0xe2, 0x34, 0xdf, 0xc1, 0x62, 0xf6, 0x9d, 0x7e, 0x33, 0x87,
	0x24, 0x83, 0x96, 0xdf, 0xb9, 0x0d, 0x3a, 0x4e, 0xfc, 0xa3, 0x00, 0xd2, 0xb5, 0x2f, 0xe0, 0xee,
	0x8d, 0x94, 0xd9, 0x4d, 0xf2, 0xfb, 0x8f, 0xb0, 0x29, 0xe9, 0x43, 0xf6, 0x99, 0xca, 0xf3, 0x21,
	0x83, 0xce, 0xf5, 0xe1, 0xfa, 0x47, 0xa4, 0x03, 0x73, 0x23, 0x4f, 0xc4, 0x66, 0x0e, 0x4b, 0x12,
	0x28, 0xeb, 0x13, 0x02, 0x93, 0x99, 0x46, 0xe6, 0x75, 0x5e, 0xa6, 0x24, 0x30, 0x37, 0xd3, 0xb8,
	0x19, 0x29, 0x12, 0x98, 0x4f, 0xcd, 0xc7, 0xad, 0x1c, 0x8a, 0x51, 0xa8, 0xbc, 0x3d, 0x31, 0x34,
	0xce, 0xc7, 0x61, 0x21, 0x33, 0x77, 0xde, 0xc8, 0xeb, 0x86, 0x14, 0x58, 0xde, 0xbd, 0x05, 0x78,
	0x90, 0xb5, 0xd1, 0x3c, 0xbb, 0x54, 0x84, 0xf3, 0x4b, 0x45, 0xf8, 0xff, 0x52, 0x11, 0x7e, 0xbe,
	0x52, 0x0a, 0xe7, 0x57, 0x4a, 0xe1, 0x9f, 0x2b, 0xa5, 0xf0, 0xe5, 0x56, 0x62, 0x14, 0x0d, 0x89,
	0x75, 0xe6, 0x12, 0xfd, 0x44, 0x8f, 0x7f, 0x9d, 0xf9, 0x13, 0xa9, 0x55, 0x0e, 0x7e, 0x19, 0xed,
	0x3e, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x75, 0x5f, 0xfb, 0xee, 0xb5, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateProject(ctx context.Context, in *MsgCreateProject, opts ...grpc.CallOption) (*MsgCreateProjectResponse, error)
	EditProject(ctx context.Context, in *MsgEditProject, opts ...grpc.CallOption) (*MsgEditProjectResponse, error)
	UpdateTotalSupply(ctx context.Context, in *MsgUpdateTotalSupply, opts ...grpc.CallOption) (*MsgUpdateTotalSupplyResponse, error)
	UpdateSpecialAllocations(ctx context.Context, in *MsgUpdateSpecialAllocations, opts ...grpc.CallOption) (*MsgUpdateSpecialAllocationsResponse, error)
	InitializeMainnet(ctx context.Context, in *MsgInitializeMainnet, opts ...grpc.CallOption) (*MsgInitializeMainnetResponse, error)
	MintVouchers(ctx context.Context, in *MsgMintVouchers, opts ...grpc.CallOption) (*MsgMintVouchersResponse, error)
	BurnVouchers(ctx context.Context, in *MsgBurnVouchers, opts ...grpc.CallOption) (*MsgBurnVouchersResponse, error)
	RedeemVouchers(ctx context.Context, in *MsgRedeemVouchers, opts ...grpc.CallOption) (*MsgRedeemVouchersResponse, error)
	UnredeemVouchers(ctx context.Context, in *MsgUnredeemVouchers, opts ...grpc.CallOption) (*MsgUnredeemVouchersResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateProject(ctx context.Context, in *MsgCreateProject, opts ...grpc.CallOption) (*MsgCreateProjectResponse, error) {
	out := new(MsgCreateProjectResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditProject(ctx context.Context, in *MsgEditProject, opts ...grpc.CallOption) (*MsgEditProjectResponse, error) {
	out := new(MsgEditProjectResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/EditProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTotalSupply(ctx context.Context, in *MsgUpdateTotalSupply, opts ...grpc.CallOption) (*MsgUpdateTotalSupplyResponse, error) {
	out := new(MsgUpdateTotalSupplyResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/UpdateTotalSupply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSpecialAllocations(ctx context.Context, in *MsgUpdateSpecialAllocations, opts ...grpc.CallOption) (*MsgUpdateSpecialAllocationsResponse, error) {
	out := new(MsgUpdateSpecialAllocationsResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/UpdateSpecialAllocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InitializeMainnet(ctx context.Context, in *MsgInitializeMainnet, opts ...grpc.CallOption) (*MsgInitializeMainnetResponse, error) {
	out := new(MsgInitializeMainnetResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/InitializeMainnet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MintVouchers(ctx context.Context, in *MsgMintVouchers, opts ...grpc.CallOption) (*MsgMintVouchersResponse, error) {
	out := new(MsgMintVouchersResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/MintVouchers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BurnVouchers(ctx context.Context, in *MsgBurnVouchers, opts ...grpc.CallOption) (*MsgBurnVouchersResponse, error) {
	out := new(MsgBurnVouchersResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/BurnVouchers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RedeemVouchers(ctx context.Context, in *MsgRedeemVouchers, opts ...grpc.CallOption) (*MsgRedeemVouchersResponse, error) {
	out := new(MsgRedeemVouchersResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/RedeemVouchers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnredeemVouchers(ctx context.Context, in *MsgUnredeemVouchers, opts ...grpc.CallOption) (*MsgUnredeemVouchersResponse, error) {
	out := new(MsgUnredeemVouchersResponse)
	err := c.cc.Invoke(ctx, "/tendermint.spn.project.Msg/UnredeemVouchers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateProject(context.Context, *MsgCreateProject) (*MsgCreateProjectResponse, error)
	EditProject(context.Context, *MsgEditProject) (*MsgEditProjectResponse, error)
	UpdateTotalSupply(context.Context, *MsgUpdateTotalSupply) (*MsgUpdateTotalSupplyResponse, error)
	UpdateSpecialAllocations(context.Context, *MsgUpdateSpecialAllocations) (*MsgUpdateSpecialAllocationsResponse, error)
	InitializeMainnet(context.Context, *MsgInitializeMainnet) (*MsgInitializeMainnetResponse, error)
	MintVouchers(context.Context, *MsgMintVouchers) (*MsgMintVouchersResponse, error)
	BurnVouchers(context.Context, *MsgBurnVouchers) (*MsgBurnVouchersResponse, error)
	RedeemVouchers(context.Context, *MsgRedeemVouchers) (*MsgRedeemVouchersResponse, error)
	UnredeemVouchers(context.Context, *MsgUnredeemVouchers) (*MsgUnredeemVouchersResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateProject(ctx context.Context, req *MsgCreateProject) (*MsgCreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedMsgServer) EditProject(ctx context.Context, req *MsgEditProject) (*MsgEditProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditProject not implemented")
}
func (*UnimplementedMsgServer) UpdateTotalSupply(ctx context.Context, req *MsgUpdateTotalSupply) (*MsgUpdateTotalSupplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTotalSupply not implemented")
}
func (*UnimplementedMsgServer) UpdateSpecialAllocations(ctx context.Context, req *MsgUpdateSpecialAllocations) (*MsgUpdateSpecialAllocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSpecialAllocations not implemented")
}
func (*UnimplementedMsgServer) InitializeMainnet(ctx context.Context, req *MsgInitializeMainnet) (*MsgInitializeMainnetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitializeMainnet not implemented")
}
func (*UnimplementedMsgServer) MintVouchers(ctx context.Context, req *MsgMintVouchers) (*MsgMintVouchersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MintVouchers not implemented")
}
func (*UnimplementedMsgServer) BurnVouchers(ctx context.Context, req *MsgBurnVouchers) (*MsgBurnVouchersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BurnVouchers not implemented")
}
func (*UnimplementedMsgServer) RedeemVouchers(ctx context.Context, req *MsgRedeemVouchers) (*MsgRedeemVouchersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RedeemVouchers not implemented")
}
func (*UnimplementedMsgServer) UnredeemVouchers(ctx context.Context, req *MsgUnredeemVouchers) (*MsgUnredeemVouchersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnredeemVouchers not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateProject(ctx, req.(*MsgCreateProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/EditProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditProject(ctx, req.(*MsgEditProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTotalSupply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTotalSupply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTotalSupply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/UpdateTotalSupply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTotalSupply(ctx, req.(*MsgUpdateTotalSupply))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSpecialAllocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSpecialAllocations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSpecialAllocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/UpdateSpecialAllocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSpecialAllocations(ctx, req.(*MsgUpdateSpecialAllocations))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InitializeMainnet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInitializeMainnet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InitializeMainnet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/InitializeMainnet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InitializeMainnet(ctx, req.(*MsgInitializeMainnet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MintVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMintVouchers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MintVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/MintVouchers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MintVouchers(ctx, req.(*MsgMintVouchers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BurnVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBurnVouchers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BurnVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/BurnVouchers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BurnVouchers(ctx, req.(*MsgBurnVouchers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RedeemVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRedeemVouchers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RedeemVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/RedeemVouchers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RedeemVouchers(ctx, req.(*MsgRedeemVouchers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnredeemVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnredeemVouchers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnredeemVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tendermint.spn.project.Msg/UnredeemVouchers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnredeemVouchers(ctx, req.(*MsgUnredeemVouchers))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tendermint.spn.project.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _Msg_CreateProject_Handler,
		},
		{
			MethodName: "EditProject",
			Handler:    _Msg_EditProject_Handler,
		},
		{
			MethodName: "UpdateTotalSupply",
			Handler:    _Msg_UpdateTotalSupply_Handler,
		},
		{
			MethodName: "UpdateSpecialAllocations",
			Handler:    _Msg_UpdateSpecialAllocations_Handler,
		},
		{
			MethodName: "InitializeMainnet",
			Handler:    _Msg_InitializeMainnet_Handler,
		},
		{
			MethodName: "MintVouchers",
			Handler:    _Msg_MintVouchers_Handler,
		},
		{
			MethodName: "BurnVouchers",
			Handler:    _Msg_BurnVouchers_Handler,
		},
		{
			MethodName: "RedeemVouchers",
			Handler:    _Msg_RedeemVouchers_Handler,
		},
		{
			MethodName: "UnredeemVouchers",
			Handler:    _Msg_UnredeemVouchers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "project/tx.proto",
}

func (m *MsgCreateProject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TotalSupply) > 0 {
		for iNdEx := len(m.TotalSupply) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TotalSupply[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ProjectName) > 0 {
		i -= len(m.ProjectName)
		copy(dAtA[i:], m.ProjectName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProjectName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateProjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditProject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditProject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditProject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditProjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditProjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditProjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTotalSupply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTotalSupply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTotalSupply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TotalSupplyUpdate) > 0 {
		for iNdEx := len(m.TotalSupplyUpdate) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TotalSupplyUpdate[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTotalSupplyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTotalSupplyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTotalSupplyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSpecialAllocations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSpecialAllocations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSpecialAllocations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.SpecialAllocations.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSpecialAllocationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSpecialAllocationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSpecialAllocationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInitializeMainnet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitializeMainnet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitializeMainnet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MainnetChainID) > 0 {
		i -= len(m.MainnetChainID)
		copy(dAtA[i:], m.MainnetChainID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MainnetChainID)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SourceHash) > 0 {
		i -= len(m.SourceHash)
		copy(dAtA[i:], m.SourceHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SourceHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SourceURL) > 0 {
		i -= len(m.SourceURL)
		copy(dAtA[i:], m.SourceURL)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SourceURL)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInitializeMainnetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInitializeMainnetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInitializeMainnetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MainnetID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MainnetID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgMintVouchers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMintVouchers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMintVouchers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Shares) > 0 {
		for iNdEx := len(m.Shares) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Shares[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMintVouchersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMintVouchersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMintVouchersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBurnVouchers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBurnVouchers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBurnVouchers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Vouchers) > 0 {
		for iNdEx := len(m.Vouchers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Vouchers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBurnVouchersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBurnVouchersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBurnVouchersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRedeemVouchers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRedeemVouchers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRedeemVouchers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Vouchers) > 0 {
		for iNdEx := len(m.Vouchers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Vouchers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRedeemVouchersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRedeemVouchersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRedeemVouchersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnredeemVouchers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnredeemVouchers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnredeemVouchers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Shares) > 0 {
		for iNdEx := len(m.Shares) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Shares[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.ProjectID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnredeemVouchersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnredeemVouchersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnredeemVouchersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateProject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProjectName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.TotalSupply) > 0 {
		for _, e := range m.TotalSupply {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateProjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	return n
}

func (m *MsgEditProject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditProjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateTotalSupply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	if len(m.TotalSupplyUpdate) > 0 {
		for _, e := range m.TotalSupplyUpdate {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateTotalSupplyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateSpecialAllocations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	l = m.SpecialAllocations.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateSpecialAllocationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInitializeMainnet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	l = len(m.SourceURL)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SourceHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MainnetChainID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInitializeMainnetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MainnetID != 0 {
		n += 1 + sovTx(uint64(m.MainnetID))
	}
	return n
}

func (m *MsgMintVouchers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	if len(m.Shares) > 0 {
		for _, e := range m.Shares {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgMintVouchersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBurnVouchers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	if len(m.Vouchers) > 0 {
		for _, e := range m.Vouchers {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgBurnVouchersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRedeemVouchers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Vouchers) > 0 {
		for _, e := range m.Vouchers {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgRedeemVouchersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnredeemVouchers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProjectID != 0 {
		n += 1 + sovTx(uint64(m.ProjectID))
	}
	if len(m.Shares) > 0 {
		for _, e := range m.Shares {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUnredeemVouchersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateProject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalSupply", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TotalSupply = append(m.TotalSupply, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.TotalSupply[len(m.TotalSupply)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata[:0], dAtA[iNdEx:postIndex]...)
			if m.Metadata == nil {
				m.Metadata = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateProjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditProject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditProject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditProject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata[:0], dAtA[iNdEx:postIndex]...)
			if m.Metadata == nil {
				m.Metadata = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditProjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditProjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditProjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTotalSupply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTotalSupply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTotalSupply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalSupplyUpdate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TotalSupplyUpdate = append(m.TotalSupplyUpdate, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.TotalSupplyUpdate[len(m.TotalSupplyUpdate)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTotalSupplyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTotalSupplyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTotalSupplyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSpecialAllocations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSpecialAllocations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSpecialAllocations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpecialAllocations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SpecialAllocations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSpecialAllocationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSpecialAllocationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSpecialAllocationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitializeMainnet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitializeMainnet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitializeMainnet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MainnetChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MainnetChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInitializeMainnetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInitializeMainnetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInitializeMainnetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MainnetID", wireType)
			}
			m.MainnetID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MainnetID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMintVouchers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMintVouchers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMintVouchers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shares", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Shares = append(m.Shares, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.Shares[len(m.Shares)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMintVouchersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMintVouchersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMintVouchersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBurnVouchers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBurnVouchers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBurnVouchers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vouchers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vouchers = append(m.Vouchers, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.Vouchers[len(m.Vouchers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBurnVouchersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBurnVouchersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBurnVouchersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRedeemVouchers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRedeemVouchers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRedeemVouchers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vouchers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vouchers = append(m.Vouchers, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.Vouchers[len(m.Vouchers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRedeemVouchersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRedeemVouchersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRedeemVouchersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnredeemVouchers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnredeemVouchers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnredeemVouchers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			m.ProjectID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Shares", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Shares = append(m.Shares, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.Shares[len(m.Shares)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnredeemVouchersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnredeemVouchersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnredeemVouchersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
