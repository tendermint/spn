// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: campaign/campaign_summary.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CampaignSummary struct {
	Campaign           Campaign                                 `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign"`
	HasMostRecentChain bool                                     `protobuf:"varint,2,opt,name=hasMostRecentChain,proto3" json:"hasMostRecentChain,omitempty"`
	MostRecentChain    MostRecentChain                          `protobuf:"bytes,3,opt,name=mostRecentChain,proto3" json:"mostRecentChain"`
	Incentivized       bool                                     `protobuf:"varint,4,opt,name=incentivized,proto3" json:"incentivized,omitempty"`
	Rewards            github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,5,rep,name=rewards,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"rewards"`
	RewardsDistributed bool                                     `protobuf:"varint,6,opt,name=rewardsDistributed,proto3" json:"rewardsDistributed,omitempty"`
}

func (m *CampaignSummary) Reset()         { *m = CampaignSummary{} }
func (m *CampaignSummary) String() string { return proto.CompactTextString(m) }
func (*CampaignSummary) ProtoMessage()    {}
func (*CampaignSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_79f88e1df7834fd2, []int{0}
}
func (m *CampaignSummary) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampaignSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampaignSummary.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampaignSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampaignSummary.Merge(m, src)
}
func (m *CampaignSummary) XXX_Size() int {
	return m.Size()
}
func (m *CampaignSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_CampaignSummary.DiscardUnknown(m)
}

var xxx_messageInfo_CampaignSummary proto.InternalMessageInfo

func (m *CampaignSummary) GetCampaign() Campaign {
	if m != nil {
		return m.Campaign
	}
	return Campaign{}
}

func (m *CampaignSummary) GetHasMostRecentChain() bool {
	if m != nil {
		return m.HasMostRecentChain
	}
	return false
}

func (m *CampaignSummary) GetMostRecentChain() MostRecentChain {
	if m != nil {
		return m.MostRecentChain
	}
	return MostRecentChain{}
}

func (m *CampaignSummary) GetIncentivized() bool {
	if m != nil {
		return m.Incentivized
	}
	return false
}

func (m *CampaignSummary) GetRewards() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *CampaignSummary) GetRewardsDistributed() bool {
	if m != nil {
		return m.RewardsDistributed
	}
	return false
}

type MostRecentChain struct {
	LaunchID        uint64 `protobuf:"varint,1,opt,name=launchID,proto3" json:"launchID,omitempty"`
	LaunchTriggered bool   `protobuf:"varint,2,opt,name=launchTriggered,proto3" json:"launchTriggered,omitempty"`
	SourceURL       string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	SourceHash      string `protobuf:"bytes,4,opt,name=sourceHash,proto3" json:"sourceHash,omitempty"`
	RequestNb       uint64 `protobuf:"varint,5,opt,name=requestNb,proto3" json:"requestNb,omitempty"`
	ValidatorNb     uint64 `protobuf:"varint,6,opt,name=validatorNb,proto3" json:"validatorNb,omitempty"`
}

func (m *MostRecentChain) Reset()         { *m = MostRecentChain{} }
func (m *MostRecentChain) String() string { return proto.CompactTextString(m) }
func (*MostRecentChain) ProtoMessage()    {}
func (*MostRecentChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_79f88e1df7834fd2, []int{1}
}
func (m *MostRecentChain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MostRecentChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MostRecentChain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MostRecentChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MostRecentChain.Merge(m, src)
}
func (m *MostRecentChain) XXX_Size() int {
	return m.Size()
}
func (m *MostRecentChain) XXX_DiscardUnknown() {
	xxx_messageInfo_MostRecentChain.DiscardUnknown(m)
}

var xxx_messageInfo_MostRecentChain proto.InternalMessageInfo

func (m *MostRecentChain) GetLaunchID() uint64 {
	if m != nil {
		return m.LaunchID
	}
	return 0
}

func (m *MostRecentChain) GetLaunchTriggered() bool {
	if m != nil {
		return m.LaunchTriggered
	}
	return false
}

func (m *MostRecentChain) GetSourceURL() string {
	if m != nil {
		return m.SourceURL
	}
	return ""
}

func (m *MostRecentChain) GetSourceHash() string {
	if m != nil {
		return m.SourceHash
	}
	return ""
}

func (m *MostRecentChain) GetRequestNb() uint64 {
	if m != nil {
		return m.RequestNb
	}
	return 0
}

func (m *MostRecentChain) GetValidatorNb() uint64 {
	if m != nil {
		return m.ValidatorNb
	}
	return 0
}

func init() {
	proto.RegisterType((*CampaignSummary)(nil), "tendermint.spn.campaign.CampaignSummary")
	proto.RegisterType((*MostRecentChain)(nil), "tendermint.spn.campaign.MostRecentChain")
}

func init() { proto.RegisterFile("campaign/campaign_summary.proto", fileDescriptor_79f88e1df7834fd2) }

var fileDescriptor_79f88e1df7834fd2 = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x6d, 0xd8, 0xee, 0xd2, 0xba, 0x48, 0x95, 0x2c, 0xa4, 0x0d, 0x15, 0x4a, 0x4b, 0x2f, 0x44,
	0x48, 0xd8, 0xda, 0xe5, 0x0f, 0xda, 0x1e, 0x40, 0x82, 0x3d, 0x18, 0x90, 0x10, 0x1c, 0x90, 0x93,
	0x58, 0x89, 0xc5, 0xc6, 0x0e, 0xb6, 0x53, 0x58, 0xbe, 0x62, 0xbf, 0x83, 0x1f, 0x61, 0x8f, 0x7b,
	0x41, 0xe2, 0xb4, 0xa0, 0xf6, 0x2f, 0x38, 0xa1, 0xd8, 0x49, 0x5b, 0xb2, 0xac, 0xc4, 0x29, 0x33,
	0x6f, 0xde, 0x78, 0x5e, 0xde, 0x0c, 0x18, 0xc7, 0x34, 0x2f, 0x28, 0x4f, 0x05, 0x6e, 0x82, 0xf7,
	0xba, 0xcc, 0x73, 0xaa, 0xce, 0x50, 0xa1, 0xa4, 0x91, 0xf0, 0xd0, 0x30, 0x91, 0x30, 0x95, 0x73,
	0x61, 0x90, 0x2e, 0x04, 0x6a, 0x68, 0xa3, 0xbb, 0xa9, 0x4c, 0xa5, 0xe5, 0xe0, 0x2a, 0x72, 0xf4,
	0x51, 0x10, 0x4b, 0x9d, 0x4b, 0x8d, 0x23, 0xaa, 0x19, 0x5e, 0x1e, 0x45, 0xcc, 0xd0, 0x23, 0x1c,
	0x4b, 0x2e, 0xea, 0xfa, 0xe1, 0xb5, 0x79, 0xae, 0x30, 0xfd, 0xb6, 0x07, 0x86, 0xf3, 0x1a, 0x7a,
	0xe9, 0x14, 0xc0, 0x39, 0xe8, 0x35, 0x2c, 0xdf, 0x9b, 0x78, 0xe1, 0xe0, 0xf8, 0x01, 0xba, 0x41,
	0x0e, 0x6a, 0x7a, 0x67, 0xdd, 0x8b, 0xab, 0x71, 0x87, 0x6c, 0x1a, 0x21, 0x02, 0x30, 0xa3, 0xfa,
	0x85, 0xd4, 0x86, 0xb0, 0x98, 0x09, 0x33, 0xcf, 0x28, 0x17, 0xfe, 0xad, 0x89, 0x17, 0xf6, 0xc8,
	0x3f, 0x2a, 0xf0, 0x0d, 0x18, 0xe6, 0x2d, 0xf2, 0x9e, 0x9d, 0x1d, 0xde, 0x38, 0xbb, 0xf5, 0x44,
	0x2d, 0xa1, 0xfd, 0x0c, 0x9c, 0x82, 0x3b, 0x5c, 0x54, 0x29, 0x5f, 0xf2, 0x2f, 0x2c, 0xf1, 0xbb,
	0x56, 0xc3, 0x5f, 0x18, 0x3c, 0xf7, 0xc0, 0x6d, 0xc5, 0x3e, 0x51, 0x95, 0x68, 0x7f, 0x7f, 0xb2,
	0x17, 0x0e, 0x8e, 0xef, 0x21, 0x67, 0x29, 0xaa, 0x2c, 0x45, 0xb5, 0xa5, 0x68, 0x2e, 0xb9, 0x98,
	0xbd, 0xab, 0xe6, 0xfc, 0xbe, 0x1a, 0x3f, 0x4c, 0xb9, 0xc9, 0xca, 0x08, 0xc5, 0x32, 0xc7, 0xb5,
	0xff, 0xee, 0xf3, 0x58, 0x27, 0x1f, 0xb0, 0x39, 0x2b, 0x98, 0xb6, 0x0d, 0x5f, 0x7f, 0x8e, 0xc3,
	0xff, 0xa4, 0x6a, 0xd2, 0xc8, 0xa8, 0x0c, 0xac, 0xc3, 0x05, 0xd7, 0x46, 0xf1, 0xa8, 0x34, 0x2c,
	0xf1, 0x0f, 0x9c, 0x81, 0xd7, 0x2b, 0xd3, 0xef, 0x1e, 0x18, 0xb6, 0x4d, 0x1d, 0x81, 0xde, 0x29,
	0x2d, 0x45, 0x9c, 0x3d, 0x5b, 0xd8, 0x4d, 0x76, 0xc9, 0x26, 0x87, 0x21, 0x18, 0xba, 0xf8, 0x95,
	0xe2, 0x69, 0xca, 0x14, 0x4b, 0xea, 0xed, 0xb4, 0x61, 0x78, 0x1f, 0xf4, 0xb5, 0x2c, 0x55, 0xcc,
	0x5e, 0x93, 0xe7, 0x76, 0x29, 0x7d, 0xb2, 0x05, 0x60, 0x00, 0x80, 0x4b, 0x9e, 0x52, 0x9d, 0x59,
	0x73, 0xfb, 0x64, 0x07, 0xa9, 0xba, 0x15, 0xfb, 0x58, 0x32, 0x6d, 0x4e, 0x22, 0x7f, 0xdf, 0x8a,
	0xd8, 0x02, 0x70, 0x02, 0x06, 0x4b, 0x7a, 0xca, 0x13, 0x6a, 0xa4, 0x3a, 0x89, 0xec, 0xef, 0x75,
	0xc9, 0x2e, 0x34, 0x5b, 0x5c, 0xac, 0x02, 0xef, 0x72, 0x15, 0x78, 0xbf, 0x56, 0x81, 0x77, 0xbe,
	0x0e, 0x3a, 0x97, 0xeb, 0xa0, 0xf3, 0x63, 0x1d, 0x74, 0xde, 0x3e, 0xda, 0x31, 0x75, 0x7b, 0x23,
	0x58, 0x17, 0x02, 0x7f, 0xde, 0xdc, 0xb9, 0x33, 0x37, 0x3a, 0xb0, 0xe7, 0xfe, 0xe4, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x0e, 0x44, 0xd1, 0x98, 0x79, 0x03, 0x00, 0x00,
}

func (m *CampaignSummary) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampaignSummary) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampaignSummary) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RewardsDistributed {
		i--
		if m.RewardsDistributed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Rewards) > 0 {
		for iNdEx := len(m.Rewards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rewards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCampaignSummary(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Incentivized {
		i--
		if m.Incentivized {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.MostRecentChain.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintCampaignSummary(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.HasMostRecentChain {
		i--
		if m.HasMostRecentChain {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	{
		size, err := m.Campaign.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintCampaignSummary(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MostRecentChain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MostRecentChain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MostRecentChain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ValidatorNb != 0 {
		i = encodeVarintCampaignSummary(dAtA, i, uint64(m.ValidatorNb))
		i--
		dAtA[i] = 0x30
	}
	if m.RequestNb != 0 {
		i = encodeVarintCampaignSummary(dAtA, i, uint64(m.RequestNb))
		i--
		dAtA[i] = 0x28
	}
	if len(m.SourceHash) > 0 {
		i -= len(m.SourceHash)
		copy(dAtA[i:], m.SourceHash)
		i = encodeVarintCampaignSummary(dAtA, i, uint64(len(m.SourceHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SourceURL) > 0 {
		i -= len(m.SourceURL)
		copy(dAtA[i:], m.SourceURL)
		i = encodeVarintCampaignSummary(dAtA, i, uint64(len(m.SourceURL)))
		i--
		dAtA[i] = 0x1a
	}
	if m.LaunchTriggered {
		i--
		if m.LaunchTriggered {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.LaunchID != 0 {
		i = encodeVarintCampaignSummary(dAtA, i, uint64(m.LaunchID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintCampaignSummary(dAtA []byte, offset int, v uint64) int {
	offset -= sovCampaignSummary(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CampaignSummary) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Campaign.Size()
	n += 1 + l + sovCampaignSummary(uint64(l))
	if m.HasMostRecentChain {
		n += 2
	}
	l = m.MostRecentChain.Size()
	n += 1 + l + sovCampaignSummary(uint64(l))
	if m.Incentivized {
		n += 2
	}
	if len(m.Rewards) > 0 {
		for _, e := range m.Rewards {
			l = e.Size()
			n += 1 + l + sovCampaignSummary(uint64(l))
		}
	}
	if m.RewardsDistributed {
		n += 2
	}
	return n
}

func (m *MostRecentChain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LaunchID != 0 {
		n += 1 + sovCampaignSummary(uint64(m.LaunchID))
	}
	if m.LaunchTriggered {
		n += 2
	}
	l = len(m.SourceURL)
	if l > 0 {
		n += 1 + l + sovCampaignSummary(uint64(l))
	}
	l = len(m.SourceHash)
	if l > 0 {
		n += 1 + l + sovCampaignSummary(uint64(l))
	}
	if m.RequestNb != 0 {
		n += 1 + sovCampaignSummary(uint64(m.RequestNb))
	}
	if m.ValidatorNb != 0 {
		n += 1 + sovCampaignSummary(uint64(m.ValidatorNb))
	}
	return n
}

func sovCampaignSummary(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCampaignSummary(x uint64) (n int) {
	return sovCampaignSummary(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CampaignSummary) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCampaignSummary
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampaignSummary: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampaignSummary: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Campaign", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Campaign.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMostRecentChain", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMostRecentChain = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MostRecentChain", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MostRecentChain.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Incentivized", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Incentivized = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rewards = append(m.Rewards, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.Rewards[len(m.Rewards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardsDistributed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RewardsDistributed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCampaignSummary(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MostRecentChain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCampaignSummary
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MostRecentChain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MostRecentChain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchID", wireType)
			}
			m.LaunchID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchTriggered", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LaunchTriggered = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestNb", wireType)
			}
			m.RequestNb = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestNb |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorNb", wireType)
			}
			m.ValidatorNb = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ValidatorNb |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCampaignSummary(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCampaignSummary
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCampaignSummary(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCampaignSummary
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCampaignSummary
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCampaignSummary
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCampaignSummary
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCampaignSummary
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCampaignSummary        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCampaignSummary          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCampaignSummary = fmt.Errorf("proto: unexpected end of group")
)
