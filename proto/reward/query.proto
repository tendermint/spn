syntax = "proto3";
package tendermint.spn.reward;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "reward/params.proto";
import "reward/reward_pool.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/tendermint/spn/x/reward/types";

// Query defines the gRPC querier service.
service Query {
  // Queries a RewardPool by index.
  rpc RewardPool(QueryGetRewardPoolRequest) returns (QueryGetRewardPoolResponse) {
    option (google.api.http).get = "/tendermint/spn/reward/reward_pool/{launchID}";
  }

  // Queries a list of RewardPool items.
  rpc RewardPoolAll(QueryAllRewardPoolRequest) returns (QueryAllRewardPoolResponse) {
    option (google.api.http).get = "/tendermint/spn/reward/reward_pool";
  }

  // Params queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/tendermint/spn/reward/params";
  }

}

message QueryGetRewardPoolRequest {
  uint64 launchID = 1;
}

message QueryGetRewardPoolResponse {
  RewardPool rewardPool = 1 [(gogoproto.nullable) = false];
}

message QueryAllRewardPoolRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRewardPoolResponse {
  repeated RewardPool                    rewardPool = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}
