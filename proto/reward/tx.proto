syntax = "proto3";
package tendermint.spn.reward;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/tendermint/spn/x/reward/types";

// Msg defines the Msg service.
service Msg {
  rpc SetRewards(MsgSetRewards) returns (MsgSetRewardsResponse);
}

message MsgSetRewards {
  string   provider                       = 1;
  uint64   launchID                       = 2;
  repeated cosmos.base.v1beta1.Coin coins = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  int64 lastRewardHeight = 4;
}

message MsgSetRewardsResponse {
  repeated cosmos.base.v1beta1.Coin previousCoins = 1 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  int64    previousLastRewardHeight          = 2;
  repeated cosmos.base.v1beta1.Coin newCoins = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  int64 newLastRewardHeight = 4;
}
