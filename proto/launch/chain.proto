syntax = "proto3";
package tendermint.spn.launch;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/tendermint/spn/x/launch/types";

message Chain {
  uint64 launchID       = 1;
  uint64 coordinatorID  = 2;
  string genesisChainID = 3;
  int64  createdAt      = 4;

  string sourceURL  = 5;
  string sourceHash = 6;

  InitialGenesis initialGenesis = 7 [(gogoproto.nullable) = false];

  bool   hasCampaign = 8;
  uint64 campaignID  = 9;
  bool   isMainnet   = 10;

  bool                      launchTriggered = 11;
  google.protobuf.Timestamp launchTime      = 12 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  int64 consumerRevisionHeight = 13;

  bool monitoringConnected = 14;

  // account balance is the balance given to approved accounts
  // for this chain.  If not set, the balances used will be those
  // contained in the requests
  repeated cosmos.base.v1beta1.Coin accountBalance = 15 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  bytes metadata = 16;
}

message InitialGenesis {
  oneof source {
    DefaultInitialGenesis defaultInitialGenesis = 1;
    GenesisURL            genesisURL            = 2;
    GenesisConfig         genesisConfig         = 3;
  }
}

// DefaultInitialGenesis specifies using the default CLI-generated genesis as an
// initial genesis
message DefaultInitialGenesis {}

// GenesisURL specifies using a custom genesis from a URL as the initial genesis
message GenesisURL {
  string url  = 1;
  string hash = 2;
}

// GenesisConfig specifies using a custom genesis from a Ignite CLI config file
// the file is located in the root specified by sourceURL
message GenesisConfig {
  string file = 1;
}