syntax = "proto3";
package tendermint.spn.launch;

// this line is used by starport scaffolding # proto/tx/import
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/tendermint/spn/x/launch/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc SettleRequest(MsgSettleRequest) returns (MsgSettleRequestResponse);
  rpc CreateChain(MsgCreateChain) returns (MsgCreateChainResponse);
  rpc EditChain(MsgEditChain) returns (MsgEditChainResponse);
  rpc RevertLaunch(MsgRevertLaunch) returns (MsgRevertLaunchResponse);
  rpc TriggerLaunch(MsgTriggerLaunch) returns (MsgTriggerLaunchResponse);
  rpc RequestRemoveAccount(MsgRequestRemoveAccount) returns (MsgRequestRemoveAccountResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgSettleRequest {
  string coordinator = 1;
  string chainID = 2;
  uint64 requestID = 3;
  bool approve = 4;
}

message MsgSettleRequestResponse {
}

message MsgCreateChain {
  string coordinator = 1;
  string chainName = 2;
  string sourceURL = 3;
  string sourceHash = 4;
  string genesisURL = 5;
  string genesisHash = 6;
}

message MsgCreateChainResponse {
  string chainID = 1;
}

message MsgEditChain {
  string coordinator = 1;
  string chainID = 2;
  string sourceURL = 3;
  string sourceHash = 4;
  google.protobuf.Any initialGenesis = 5 [(cosmos_proto.accepts_interface) = "InitialGenesis"];
}

message MsgEditChainResponse {}

message MsgRevertLaunch {
  string coordinator = 1;
  string chainID = 2;
}

message MsgRevertLaunchResponse {}

message MsgTriggerLaunch {
  string coordinator = 1;
  string chainID = 2;
  uint64 remainingTime = 3;
}

message MsgTriggerLaunchResponse {}

message MsgRequestRemoveAccount {
  string chainID = 1;
  string creator = 2;
  string address = 3;
}

message MsgRequestRemoveAccountResponse {
  uint64 requestID = 1;
}