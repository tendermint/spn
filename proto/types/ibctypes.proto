syntax = "proto3";
package tendermint.spn.ibctypes;

import "gogoproto/gogo.proto";

option go_package = "github.com/tendermint/spn/pkg/ibctypes";

// MerkeRool represents a Merkel Root in ConsensusState
message MerkeRool {
    string hash = 1 [(gogoproto.moretags) = "yaml:\"hash\""];
}

// ConsensusState represents a Consensus State
// it is compatible with the dumped state from `appd q ibc client self-consensus-state` command
message ConsensusState {
    string nextValHash = 1 [(gogoproto.moretags) = "yaml:\"next_validators_hash\""];
    string timestamp = 2 [(gogoproto.moretags) = "yaml:\"timestamp\""];
    MerkeRool root = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"root\""];
}


// PubKey represents a public key in Validator
message PubKey {
	string type = 1 [(gogoproto.moretags) = "yaml:\"type\""];
	string value = 2 [(gogoproto.moretags) = "yaml:\"value\""];
}

// Validator represents a validator in ValSet
message Validator {
	string proposerPriority = 1 [(gogoproto.moretags) = "yaml:\"proposer_priority\""];
	string votingPower = 2 [(gogoproto.moretags) = "yaml:\"voting_power\""];
	PubKey pubKey = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"pub_key\""];
}

// ValidatorSet represents a Validator Set
// it is compatible with the dumped set from `appd q tendermint-validator-set n` command
message ValidatorSet {
    repeated Validator validators = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"validators\""];
}
