syntax = "proto3";
package tendermint.spn.profile;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "profile/validator.proto";
import "profile/coordinator.proto";

option go_package = "github.com/tendermint/spn/x/profile/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a validatorByAddress by index.
	rpc ValidatorByAddress(QueryGetValidatorByAddressRequest) returns (QueryGetValidatorByAddressResponse) {
		option (google.api.http).get = "/tendermint/spn/profile/validatorByAddress/{address}";
	}

	// Queries a list of validatorByAddress items.
	rpc ValidatorByAddressAll(QueryAllValidatorByAddressRequest) returns (QueryAllValidatorByAddressResponse) {
		option (google.api.http).get = "/tendermint/spn/profile/validatorByAddress";
	}


	// Queries a coordinatorByAddress by index.
	rpc CoordinatorByAddress(QueryGetCoordinatorByAddressRequest) returns (QueryGetCoordinatorByAddressResponse) {
		option (google.api.http).get = "/tendermint/spn/profile/coordinatorByAddress/{address}";
	}

	// Queries a coordinator by id.
	rpc Coordinator(QueryGetCoordinatorRequest) returns (QueryGetCoordinatorResponse) {
		option (google.api.http).get = "/tendermint/spn/profile/coordinator/{id}";
	}

	// Queries a list of coordinator items.
	rpc CoordinatorAll(QueryAllCoordinatorRequest) returns (QueryAllCoordinatorResponse) {
		option (google.api.http).get = "/tendermint/spn/profile/coordinator";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetValidatorByAddressRequest {
	  string address = 1;

}

message QueryGetValidatorByAddressResponse {
	ValidatorByAddress validatorByAddress = 1;
}

message QueryAllValidatorByAddressRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllValidatorByAddressResponse {
	repeated ValidatorByAddress validatorByAddress = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetCoordinatorByAddressRequest {
	  string address = 1;

}

message QueryGetCoordinatorByAddressResponse {
	CoordinatorByAddress coordinatorByAddress = 1;
}

message QueryAllCoordinatorByAddressRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoordinatorByAddressResponse {
	repeated CoordinatorByAddress coordinatorByAddress = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetCoordinatorRequest {
	uint64 id = 1;
}

message QueryGetCoordinatorResponse {
	Coordinator Coordinator = 1;
}

message QueryAllCoordinatorRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoordinatorResponse {
	repeated Coordinator Coordinator = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
