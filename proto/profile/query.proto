syntax = "proto3";
package tendermint.spn.profile;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "profile/validator.proto";
import "profile/coordinator.proto";

option go_package = "github.com/tendermint/spn/x/profile/types";

// Query defines the gRPC querier service.
service Query {
  // Queries a validator by index.
  rpc Validator(QueryGetValidatorRequest) returns (QueryGetValidatorResponse) {
    option (google.api.http).get = "/tendermint/spn/profile/validator/{address}";
  }

  // Queries a list of validator items.
  rpc ValidatorAll(QueryAllValidatorRequest) returns (QueryAllValidatorResponse) {
    option (google.api.http).get = "/tendermint/spn/profile/validator";
  }

  // Queries a ValidatorByConsAddress by consensus address.
  rpc ValidatorByOperatorAddress(QueryGetValidatorByOperatorAddressRequest)
      returns (QueryGetValidatorByOperatorAddressResponse) {
    option (google.api.http).get = "/tendermint/spn/profile/validator_by_operator_address/{operatorAddress}";
  }

  // Queries a coordinator by id.
  rpc Coordinator(QueryGetCoordinatorRequest) returns (QueryGetCoordinatorResponse) {
    option (google.api.http).get = "/tendermint/spn/profile/coordinator/{coordinatorID}";
  }

  // Queries a list of coordinator items.
  rpc CoordinatorAll(QueryAllCoordinatorRequest) returns (QueryAllCoordinatorResponse) {
    option (google.api.http).get = "/tendermint/spn/profile/coordinator";
  }

  // Queries a coordinatorByAddress by index.
  rpc CoordinatorByAddress(QueryGetCoordinatorByAddressRequest) returns (QueryGetCoordinatorByAddressResponse) {
    option (google.api.http).get = "/tendermint/spn/profile/coordinator_by_address/{address}";
  }
}

message QueryGetValidatorRequest {
  string address = 1;
}

message QueryGetValidatorResponse {
  Validator validator = 1 [(gogoproto.nullable) = false];
}

message QueryAllValidatorRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllValidatorResponse {
  repeated Validator                     validator  = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetValidatorByOperatorAddressRequest {
  string operatorAddress = 1;
}

message QueryGetValidatorByOperatorAddressResponse {
  ValidatorByOperatorAddress validatorByOperatorAddress = 1 [(gogoproto.nullable) = false];
}

message QueryGetCoordinatorRequest {
  uint64 coordinatorID = 1;
}

message QueryGetCoordinatorResponse {
  Coordinator coordinator = 1 [(gogoproto.nullable) = false];
}

message QueryAllCoordinatorRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoordinatorResponse {
  repeated Coordinator                   coordinator = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

message QueryGetCoordinatorByAddressRequest {
  string address = 1;
}

message QueryGetCoordinatorByAddressResponse {
  CoordinatorByAddress coordinatorByAddress = 1 [(gogoproto.nullable) = false];
}