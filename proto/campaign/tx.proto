syntax = "proto3";
package tendermint.spn.campaign;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "campaign/vesting.proto";
import "campaign/special_allocations.proto";

option go_package = "github.com/tendermint/spn/x/campaign/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateCampaign(MsgCreateCampaign) returns (MsgCreateCampaignResponse);
  rpc EditCampaign(MsgEditCampaign) returns (MsgEditCampaignResponse);
  rpc UpdateTotalSupply(MsgUpdateTotalSupply) returns (MsgUpdateTotalSupplyResponse);
  rpc UpdateSpecialAllocations(MsgUpdateSpecialAllocations) returns (MsgUpdateSpecialAllocationsResponse);
  rpc InitializeMainnet(MsgInitializeMainnet) returns (MsgInitializeMainnetResponse);
  rpc MintVouchers(MsgMintVouchers) returns (MsgMintVouchersResponse);
  rpc BurnVouchers(MsgBurnVouchers) returns (MsgBurnVouchersResponse);
  rpc RedeemVouchers(MsgRedeemVouchers) returns (MsgRedeemVouchersResponse);
  rpc UnredeemVouchers(MsgUnredeemVouchers) returns (MsgUnredeemVouchersResponse);
}

message MsgCreateCampaign {
  string   coordinator                          = 1;
  string   campaignName                         = 2;
  repeated cosmos.base.v1beta1.Coin totalSupply = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  bytes metadata = 4;
}

message MsgCreateCampaignResponse {
  uint64 campaignID = 1;
}

message MsgEditCampaign {
  string coordinator = 1;
  uint64 campaignID  = 2;
  string name        = 3;
  bytes  metadata    = 4;
}

message MsgEditCampaignResponse {}

message MsgUpdateTotalSupply {
  string   coordinator                                = 1;
  uint64   campaignID                                 = 2;
  repeated cosmos.base.v1beta1.Coin totalSupplyUpdate = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgUpdateTotalSupplyResponse {}

message MsgUpdateSpecialAllocations {
  string             coordinator        = 1;
  uint64             campaignID         = 2;
  SpecialAllocations specialAllocations = 3 [(gogoproto.nullable) = false];
}

message MsgUpdateSpecialAllocationsResponse {}

message MsgInitializeMainnet {
  string coordinator    = 1;
  uint64 campaignID     = 2;
  string sourceURL      = 3;
  string sourceHash     = 4;
  string mainnetChainID = 5;
}

message MsgInitializeMainnetResponse {
  uint64 mainnetID = 1;
}

message MsgMintVouchers {
  string   coordinator                     = 1;
  uint64   campaignID                      = 2;
  repeated cosmos.base.v1beta1.Coin shares = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "Shares"
  ];
}

message MsgMintVouchersResponse {}

message MsgBurnVouchers {
  string   sender                            = 1;
  uint64   campaignID                        = 2;
  repeated cosmos.base.v1beta1.Coin vouchers = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgBurnVouchersResponse {}

message MsgRedeemVouchers {
  string   sender                            = 1;
  uint64   campaignID                        = 2;
  string   account                           = 3;
  repeated cosmos.base.v1beta1.Coin vouchers = 4 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgRedeemVouchersResponse {}

message MsgUnredeemVouchers {
  string   sender                          = 1;
  uint64   campaignID                      = 2;
  repeated cosmos.base.v1beta1.Coin shares = 4 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "Shares"
  ];
}

message MsgUnredeemVouchersResponse {}
