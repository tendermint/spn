syntax = "proto3";
package tendermint.spn.campaign;

option go_package = "github.com/tendermint/spn/x/campaign/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

message MainnetVestingAccount {
  uint64 campaignID = 1;
  string address = 2;
  repeated cosmos.base.v1beta1.Coin startingShares = 3 [(gogoproto.nullable) = false, (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.castrepeated) = "Shares"];
  ShareVestingOptions vestingOptions = 4 [(gogoproto.nullable) = false];
}

message ShareVestingOptions {
  oneof options {
    ShareDelayedVesting delayedVesting = 1;
  }
}

// ShareDelayedVesting represents options for share delayed vesting
// Delayed vesting is the type of vesting where all vesting coins are vested once end time is reached
message ShareDelayedVesting {
  repeated cosmos.base.v1beta1.Coin vesting = 1 [(gogoproto.nullable) = false, (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.castrepeated) = "Shares"];
  int64 endTime = 2;
}
