syntax = "proto3";
package spn.genesis.v1beta1;

option go_package = "github.com/tendermint/spn/x/genesis/types";

import "cosmos/base/query/v1beta1/pagination.proto";
import "genesis/v1beta/types.proto";

// Query defines the gRPC querier service.
service Query {
    rpc ListChains(QueryListChainsRequest) returns (QueryListChainsResponse);
    rpc ShowChain(QueryShowChainRequest) returns (QueryShowChainResponse);
    rpc PendingProposals(QueryPendingProposalsRequest) returns (QueryPendingProposalsResponse);
    rpc ApprovedProposals(QueryApprovedProposalsRequest) returns (QueryApprovedProposalsResponse);
    rpc RejectedProposals(QueryRejectedProposalsRequest) returns (QueryRejectedProposalsResponse);
    rpc ShowProposal(QueryShowProposalRequest) returns (QueryShowProposalResponse);
}

message QueryListChainsRequest {
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListChainsResponse {
	  cosmos.base.query.v1beta1.PageResponse pagination = 1;
	  repeated string chainIDs = 2;
}

message QueryShowChainRequest {
	  string chainID = 1;
}

message QueryShowChainResponse {
	  Chain chain = 1;
}

message QueryPendingProposalsRequest {
    string chainID = 2;
}

message QueryPendingProposalsResponse {
    repeated Proposal proposals = 2;
}

message QueryApprovedProposalsRequest {
  string chainID = 2;
}

message QueryApprovedProposalsResponse {
  repeated Proposal proposals = 2;
}

message QueryRejectedProposalsRequest {
  string chainID = 2;
}

message QueryRejectedProposalsResponse {
  repeated Proposal proposals = 2;
}

message QueryShowProposalRequest {
	  string chainID = 1;
    int32 proposalID = 2;
}

message QueryShowProposalResponse {
	  Proposal proposal = 1;
}