syntax = "proto3";
package spn.project;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

import "spn/project/vesting.proto";

option go_package = "github.com/tendermint/spn/x/project/types";

message EventProjectCreated {
  uint64 projectID          = 1;
  string coordinatorAddress = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 coordinatorID      = 3;
}

message EventProjectChainAdded {
  uint64 projectID = 1;
  uint64 launchID  = 2;
}

message EventProjectInfoUpdated {
  uint64 projectID          = 1;
  string coordinatorAddress = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string projectName        = 3;
  bytes  metadata           = 4;
}

message EventProjectSharesUpdated {
  uint64   projectID                                = 1;
  string   coordinatorAddress                       = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin allocatedShares = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "Shares"
  ];
}

message EventProjectTotalSupplyUpdated {
  uint64   projectID                            = 1;
  string   coordinatorAddress                   = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin totalSupply = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message EventProjectMainnetInitialized {
  uint64 projectID          = 1;
  string coordinatorAddress = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 mainnetID          = 3;
}

message EventMainnetAccountCreated {
  uint64   projectID                       = 1;
  string   address                         = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin shares = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "Shares"
  ];
}

message EventMainnetAccountUpdated {
  uint64   projectID                       = 1;
  string   address                         = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin shares = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.casttype)     = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "Shares"
  ];
}

message EventMainnetAccountRemoved {
  uint64 projectID = 1;
  string address   = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message EventMainnetVestingAccountCreated {
  uint64              projectID      = 1;
  string              address        = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  ShareVestingOptions vestingOptions = 3 [(gogoproto.nullable) = false];
}

message EventMainnetVestingAccountUpdated {
  uint64              projectID      = 1;
  string              address        = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  ShareVestingOptions vestingOptions = 3 [(gogoproto.nullable) = false];
}

message EventProjectAuctionCreated {
  uint64 projectID = 1;
  uint64 auctionID = 2;
}
